{
  "api/index.html": {
    "href": "api/index.html",
    "title": "| Save Data PS5 | 0.0.16-preview",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "api/SaveDataTests.BaseTestFramework.html": {
    "href": "api/SaveDataTests.BaseTestFramework.html",
    "title": "Class BaseTestFramework | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class BaseTestFramework Inheritance Object BaseTestFramework Tests Namespace : SaveDataTests Assembly : solution.dll Syntax public class BaseTestFramework Fields initResult Declaration public static InitResult initResult Field Value Type Description InitResult s_InitOutput Declaration public static string s_InitOutput Field Value Type Description String Methods GetUser() Declaration public PS5Input.LoggedInUser GetUser() Returns Type Description PS5Input.LoggedInUser IsInitialized() Declaration public bool IsInitialized() Returns Type Description Boolean LogException(Exception) Declaration public void LogException(Exception e) Parameters Type Name Description Exception e OutputAsyncResponseEvent(ResponseBase) Declaration public void OutputAsyncResponseEvent(ResponseBase response) Parameters Type Name Description ResponseBase response Setup() Declaration public void Setup()"
  },
  "api/SaveDataTests.html": {
    "href": "api/SaveDataTests.html",
    "title": "Namespace SaveDataTests | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace SaveDataTests Classes BaseTestFramework Tests Tests.TestEnumerateFilesRequest Tests.TestEnumerateFilesResponse Tests.TestReadFilesRequest Tests.TestReadFilesResponse Tests.TestWriteFilesRequest Tests.TestWriteFilesResponse"
  },
  "api/SaveDataTests.Tests.html": {
    "href": "api/SaveDataTests.Tests.html",
    "title": "Class Tests | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests Inheritance Object BaseTestFramework Tests Inherited Members BaseTestFramework.Setup() BaseTestFramework.s_InitOutput BaseTestFramework.IsInitialized() BaseTestFramework.initResult BaseTestFramework.GetUser() BaseTestFramework.OutputAsyncResponseEvent(ResponseBase) BaseTestFramework.LogException(Exception) Namespace : SaveDataTests Assembly : solution.dll Syntax public class Tests : BaseTestFramework Fields TestBlockSize Declaration public static ulong TestBlockSize Field Value Type Description UInt64 Methods A_InitializeSaveData() Declaration public IEnumerator A_InitializeSaveData() Returns Type Description IEnumerator B_InitialSearch() Declaration public IEnumerator B_InitialSearch() Returns Type Description IEnumerator C_CreateSaveData() Declaration public IEnumerator C_CreateSaveData() Returns Type Description IEnumerator D_SearchForNewSave() Declaration public IEnumerator D_SearchForNewSave() Returns Type Description IEnumerator E_WriteFiles() Declaration public IEnumerator E_WriteFiles() Returns Type Description IEnumerator G_ReadFiles() Declaration public IEnumerator G_ReadFiles() Returns Type Description IEnumerator H_DeleteSaveData() Declaration public IEnumerator H_DeleteSaveData() Returns Type Description IEnumerator InternalDeleteFiles(String) Declaration public EmptyResponse InternalDeleteFiles(string dirTestName) Parameters Type Name Description String dirTestName Returns Type Description EmptyResponse InternalEnumerateFiles(Mounting.MountPoint) Declaration public Tests.TestEnumerateFilesResponse InternalEnumerateFiles(Mounting.MountPoint mp) Parameters Type Name Description Mounting.MountPoint mp Returns Type Description Tests.TestEnumerateFilesResponse InternalMountSave(String, Boolean) Declaration public Mounting.MountResponse InternalMountSave(string testDirName, bool readWrite) Parameters Type Name Description String testDirName Boolean readWrite Returns Type Description Mounting.MountResponse InternalReadFiles(Mounting.MountPoint) Declaration public Tests.TestReadFilesResponse InternalReadFiles(Mounting.MountPoint mp) Parameters Type Name Description Mounting.MountPoint mp Returns Type Description Tests.TestReadFilesResponse InternalSearch() Declaration public Searching.DirNameSearchResponse InternalSearch() Returns Type Description Searching.DirNameSearchResponse InternalUnmountSave(Mounting.MountPoint) Declaration public EmptyResponse InternalUnmountSave(Mounting.MountPoint mp) Parameters Type Name Description Mounting.MountPoint mp Returns Type Description EmptyResponse InternalWriteFiles(Mounting.MountPoint) Declaration public Tests.TestWriteFilesResponse InternalWriteFiles(Mounting.MountPoint mp) Parameters Type Name Description Mounting.MountPoint mp Returns Type Description Tests.TestWriteFilesResponse"
  },
  "api/SaveDataTests.Tests.TestEnumerateFilesRequest.html": {
    "href": "api/SaveDataTests.Tests.TestEnumerateFilesRequest.html",
    "title": "Class Tests.TestEnumerateFilesRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests.TestEnumerateFilesRequest Inheritance Object RequestBase FileOps.FileOperationRequest Tests.TestEnumerateFilesRequest Inherited Members FileOps.FileOperationRequest.MountPointName RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : SaveDataTests Assembly : solution.dll Syntax public class TestEnumerateFilesRequest : FileOps.FileOperationRequest Methods DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse) Declaration public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response) Parameters Type Name Description Mounting.MountPoint mp FileOps.FileOperationResponse response Overrides FileOps.FileOperationRequest.DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse)"
  },
  "api/SaveDataTests.Tests.TestEnumerateFilesResponse.html": {
    "href": "api/SaveDataTests.Tests.TestEnumerateFilesResponse.html",
    "title": "Class Tests.TestEnumerateFilesResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests.TestEnumerateFilesResponse Inheritance Object ResponseBase FileOps.FileOperationResponse Tests.TestEnumerateFilesResponse Inherited Members FileOps.FileOperationResponse.Progress FileOps.FileOperationResponse.UpdateProgress(Single) ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : SaveDataTests Assembly : solution.dll Syntax public class TestEnumerateFilesResponse : FileOps.FileOperationResponse Fields files Declaration public string[] files Field Value Type Description String []"
  },
  "api/SaveDataTests.Tests.TestReadFilesRequest.html": {
    "href": "api/SaveDataTests.Tests.TestReadFilesRequest.html",
    "title": "Class Tests.TestReadFilesRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests.TestReadFilesRequest Inheritance Object RequestBase FileOps.FileOperationRequest Tests.TestReadFilesRequest Inherited Members FileOps.FileOperationRequest.MountPointName RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : SaveDataTests Assembly : solution.dll Syntax public class TestReadFilesRequest : FileOps.FileOperationRequest Methods DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse) Declaration public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response) Parameters Type Name Description Mounting.MountPoint mp FileOps.FileOperationResponse response Overrides FileOps.FileOperationRequest.DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse)"
  },
  "api/SaveDataTests.Tests.TestReadFilesResponse.html": {
    "href": "api/SaveDataTests.Tests.TestReadFilesResponse.html",
    "title": "Class Tests.TestReadFilesResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests.TestReadFilesResponse Inheritance Object ResponseBase FileOps.FileOperationResponse Tests.TestReadFilesResponse Inherited Members FileOps.FileOperationResponse.Progress FileOps.FileOperationResponse.UpdateProgress(Single) ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : SaveDataTests Assembly : solution.dll Syntax public class TestReadFilesResponse : FileOps.FileOperationResponse Fields largeData Declaration public byte[] largeData Field Value Type Description Byte [] myOtherTestData Declaration public string myOtherTestData Field Value Type Description String myTestData Declaration public string myTestData Field Value Type Description String"
  },
  "api/SaveDataTests.Tests.TestWriteFilesRequest.html": {
    "href": "api/SaveDataTests.Tests.TestWriteFilesRequest.html",
    "title": "Class Tests.TestWriteFilesRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests.TestWriteFilesRequest Inheritance Object RequestBase FileOps.FileOperationRequest Tests.TestWriteFilesRequest Inherited Members FileOps.FileOperationRequest.MountPointName RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : SaveDataTests Assembly : solution.dll Syntax public class TestWriteFilesRequest : FileOps.FileOperationRequest Fields largeData Declaration public byte[] largeData Field Value Type Description Byte [] myOtherTestData Declaration public string myOtherTestData Field Value Type Description String myTestData Declaration public string myTestData Field Value Type Description String Methods DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse) Declaration public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response) Parameters Type Name Description Mounting.MountPoint mp FileOps.FileOperationResponse response Overrides FileOps.FileOperationRequest.DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse)"
  },
  "api/SaveDataTests.Tests.TestWriteFilesResponse.html": {
    "href": "api/SaveDataTests.Tests.TestWriteFilesResponse.html",
    "title": "Class Tests.TestWriteFilesResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Tests.TestWriteFilesResponse Inheritance Object ResponseBase FileOps.FileOperationResponse Tests.TestWriteFilesResponse Inherited Members FileOps.FileOperationResponse.Progress FileOps.FileOperationResponse.UpdateProgress(Single) ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : SaveDataTests Assembly : solution.dll Syntax public class TestWriteFilesResponse : FileOps.FileOperationResponse Fields lastWriteTime Declaration public DateTime lastWriteTime Field Value Type Description DateTime totalFileSizeWritten Declaration public long totalFileSizeWritten Field Value Type Description Int64"
  },
  "api/Unity.SaveData.PS5.Backup.Backups.BackupRequest.html": {
    "href": "api/Unity.SaveData.PS5.Backup.Backups.BackupRequest.html",
    "title": "Class Backups.BackupRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Backups.BackupRequest Requests to back up a save data folder name. Inheritance Object RequestBase Backups.BackupRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Backup Assembly : solution.dll Syntax public class BackupRequest : RequestBase Constructors BackupRequest() Initializes a new instance of the Backups.BackupRequest class. Declaration public BackupRequest() Properties DirName The name of the folder to back up. Declaration public DirName DirName { get; set; } Property Value Type Description DirName"
  },
  "api/Unity.SaveData.PS5.Backup.Backups.html": {
    "href": "api/Unity.SaveData.PS5.Backup.Backups.html",
    "title": "Class Backups | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Backups Class that contains requests for save data backups. Inheritance Object Backups Namespace : Unity.SaveData.PS5.Backup Assembly : solution.dll Syntax public class Backups Methods Backup(Backups.BackupRequest, EmptyResponse) This method is used to back up a save data folder. For more information, see Sony's documentation on sceSaveDataBackup for PS5. Declaration public static int Backup(Backups.BackupRequest request, EmptyResponse response) Parameters Type Name Description Backups.BackupRequest request The save data folder to back up. EmptyResponse response This response only contains a return code and doesn't contain any data. Returns Type Description Int32 If the operation is asynchronous, the function provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in."
  },
  "api/Unity.SaveData.PS5.Backup.html": {
    "href": "api/Unity.SaveData.PS5.Backup.html",
    "title": "Namespace Unity.SaveData.PS5.Backup | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Backup Classes Backups Class that contains requests for save data backups. Backups.BackupRequest Requests to back up a save data folder name."
  },
  "api/Unity.SaveData.PS5.Core.APIResultTypes.html": {
    "href": "api/Unity.SaveData.PS5.Core.APIResultTypes.html",
    "title": "Enum APIResultTypes | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum APIResultTypes Returned from PRX calls. Specifies whether an API call was successful, or if a warning or error was generated. Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public enum APIResultTypes Fields Name Description Success API call was successful. Warning A warning has occured. Error An error had occured."
  },
  "api/Unity.SaveData.PS5.Core.BackupNotification.html": {
    "href": "api/Unity.SaveData.PS5.Core.BackupNotification.html",
    "title": "Class BackupNotification | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class BackupNotification Notification when a save data folder has been backed up. See Inheritance Object ResponseBase BackupNotification Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class BackupNotification : ResponseBase Constructors BackupNotification() Initializes a new instance of the BackupNotification class. Declaration public BackupNotification() Properties DirName Name of the save data folder that was backed up. Declaration public DirName DirName { get; } Property Value Type Description DirName UserId ID of the user who made the backup request. Declaration public int UserId { get; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Core.DirName.html": {
    "href": "api/Unity.SaveData.PS5.Core.DirName.html",
    "title": "Struct DirName | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct DirName Name of the save data folder. Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public struct DirName Fields DIRNAME_DATA_MAXSIZE Maximum size of the save data folder name. Declaration public const int DIRNAME_DATA_MAXSIZE = 31 Field Value Type Description Int32 Properties Data The name of the save data folder. Declaration public string Data { get; set; } Property Value Type Description String IsEmpty True if the folder name is empty, false otherwise. Declaration public readonly bool IsEmpty { get; } Property Value Type Description Boolean Methods ToString() Converts the folder name to a string. Declaration public override string ToString() Returns Type Description String Folder name Overrides ValueType.ToString()"
  },
  "api/Unity.SaveData.PS5.Core.EmptyResponse.html": {
    "href": "api/Unity.SaveData.PS5.Core.EmptyResponse.html",
    "title": "Class EmptyResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class EmptyResponse Representation of empty data of a ResponseBase class. This still provides basic data that contains errors and return codes. Inheritance Object ResponseBase EmptyResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class EmptyResponse : ResponseBase"
  },
  "api/Unity.SaveData.PS5.Core.Fingerprint.html": {
    "href": "api/Unity.SaveData.PS5.Core.Fingerprint.html",
    "title": "Struct Fingerprint | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct Fingerprint Name of the fingerprint data. Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public struct Fingerprint Fields FINGERPRINT_DATA_SIZE Maximum size of the save data folder name. Declaration public const int FINGERPRINT_DATA_SIZE = 65 Field Value Type Description Int32 Properties Data The fingerprint data. Declaration public string Data { get; set; } Property Value Type Description String IsEmpty True if the fingerprint data is empty, false otherwise. Declaration public readonly bool IsEmpty { get; } Property Value Type Description Boolean Methods ToString() Converts the fingerprint data to a string. Declaration public override string ToString() Returns Type Description String fingerprint data Overrides ValueType.ToString()"
  },
  "api/Unity.SaveData.PS5.Core.FunctionTypes.html": {
    "href": "api/Unity.SaveData.PS5.Core.FunctionTypes.html",
    "title": "Enum FunctionTypes | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum FunctionTypes Defines the different APIs provided by the SaveData library. This is set automatically when a request object is created, and it identifies the function it belongs to. Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public enum FunctionTypes Fields Name Description Invalid Non-valid function. It should never be returned Mount Mount a save data. Unmount Unmount a save data. GetMountInfo Get mounted save data size info. GetMountParams Get mounted save data parameters. SetMountParams Set mounted save data parameters. SaveIcon Save icon to mounted save data. LoadIcon Load icon from mounted save data. Delete Delete a save data folder. DirNameSearch Search for a user's save data folders. Backup Back up a save data folder. FileOps Custom request to perform file operations on a mounted save data folder. OpenDialog Open a save data dialog. NotificationUnmountWithBackup Notification that triggers when a backup while unmounting a save data folder has completed. NotificationBackup Notification that triggers when a backup has completed. NotificationAborted Notification that triggers when a request has been aborted. NotificationDialogOpened Notification that triggers when a dialog has been opened. NotificationDialogClosed Notification that triggers when a dialog has been closed."
  },
  "api/Unity.SaveData.PS5.Core.html": {
    "href": "api/Unity.SaveData.PS5.Core.html",
    "title": "Namespace Unity.SaveData.PS5.Core | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Core Classes BackupNotification Notification when a save data folder has been backed up. See EmptyResponse Representation of empty data of a ResponseBase class. This still provides basic data that contains errors and return codes. PendingRequest A request that is currently in the pending queue and waiting to be processed. RequestBase The base class that contains common settings for all request classes. ResponseBase Base class that contains common Response data. SaveDataCallbackEvent Callback class that contains the results of an asynchronous request or notification. SaveDataException Creates an exception to throw back to the Unity project. This can be created in the normal way or via an APIResult structure that has been returned from the native plug-in. UnmountWithBackupNotification Notification called after the backup which was triggered by unmounting a mount point has completed. See Structs DirName Name of the save data folder. Fingerprint Name of the fingerprint data. TitleId Title ID of the transfer source save data Enums APIResultTypes Returned from PRX calls. Specifies whether an API call was successful, or if a warning or error was generated. FunctionTypes Defines the different APIs provided by the SaveData library. This is set automatically when a request object is created, and it identifies the function it belongs to. ReturnCodes A set of return codes that map to the Sony SCE error codes."
  },
  "api/Unity.SaveData.PS5.Core.PendingRequest.html": {
    "href": "api/Unity.SaveData.PS5.Core.PendingRequest.html",
    "title": "Class PendingRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class PendingRequest A request that is currently in the pending queue and waiting to be processed. Inheritance Object PendingRequest Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class PendingRequest Properties AbortPending True if the request has been aborted but is still in the pending list awaiting removal, false otherwise. Declaration public bool AbortPending { get; } Property Value Type Description Boolean NpRequestId The unique request ID. Declaration public int NpRequestId { get; } Property Value Type Description Int32 Request The request object that contains the request settings. Declaration public RequestBase Request { get; } Property Value Type Description RequestBase"
  },
  "api/Unity.SaveData.PS5.Core.RequestBase.html": {
    "href": "api/Unity.SaveData.PS5.Core.RequestBase.html",
    "title": "Class RequestBase | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class RequestBase The base class that contains common settings for all request classes. Inheritance Object RequestBase Backups.BackupRequest Deleting.DeleteRequest Dialogs.OpenDialogRequest FileOps.FileOperationRequest Mounting.GetMountInfoRequest Mounting.GetMountParamsRequest Mounting.LoadIconRequest Mounting.MountPS4Request Mounting.MountRequest Mounting.SaveIconRequest Mounting.SetMountParamsRequest Mounting.UnmountRequest Searching.DirNameSearchRequest Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class RequestBase Properties Async True if the request will be performed asynchronously, false otherwise. Declaration public bool Async { get; set; } Property Value Type Description Boolean FunctionType Returns the function that uses the request. Declaration public FunctionTypes FunctionType { get; } Property Value Type Description FunctionTypes IgnoreCallback True if you want to ignore the async callback when the request has completed, false otherwise. This is useful for polling an async response, for example inside a Coroutine, instead of receiving a callback. Declaration public bool IgnoreCallback { get; set; } Property Value Type Description Boolean Locked Indicates if a Request object is locked because it is currently in the queue to be processed. Declaration public bool Locked { get; } Property Value Type Description Boolean UserId Gets the ID of the user performing the request. Declaration public int UserId { get; set; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Core.ResponseBase.html": {
    "href": "api/Unity.SaveData.PS5.Core.ResponseBase.html",
    "title": "Class ResponseBase | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class ResponseBase Base class that contains common Response data. Inheritance Object ResponseBase BackupNotification EmptyResponse UnmountWithBackupNotification Dialogs.OpenDialogResponse FileOps.FileOperationResponse Mounting.LoadIconResponse Mounting.MountInfoResponse Mounting.MountParamsResponse Mounting.MountResponse Searching.DirNameSearchResponse Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public abstract class ResponseBase Properties Exception Returns any exception that could have occurred during the background processing of the request. Declaration public Exception Exception { get; } Property Value Type Description Exception IsErrorCode True if the return code contain an error code, false otherwise. Declaration public bool IsErrorCode { get; } Property Value Type Description Boolean Locked True if a Response object is being calculated, false if it is ready to be read. Declaration public bool Locked { get; } Property Value Type Description Boolean ReturnCode Gets the return code enum of a Response object when it is ready. The return value can be a successful result or an error result. See specific functions for possible return codes. Declaration public ReturnCodes ReturnCode { get; } Property Value Type Description ReturnCodes ReturnCodeValue Gets the return code value of a Response object when it is ready. The return value can be a successful result or an error result. See specific functions for possible return codes. Declaration public int ReturnCodeValue { get; } Property Value Type Description Int32 Remarks This is an interger value. If it is less than 0, it is an error code. Methods ConvertReturnCodeToString(FunctionTypes) Generates a string containing the Hex return code and, if known, the Return code name taken from the Core.ReturnCodes enum. Because some of the enums share the same code, the returned string depends on the API function that generated the return code. Declaration public string ConvertReturnCodeToString(FunctionTypes apiCalled) Parameters Type Name Description FunctionTypes apiCalled The API function that generated the return code. Returns Type Description String The constructed string with the Hex and return code name. Remarks By default, apiCalled will be FunctionType.invalid and will return the first Core.ReturnCodes enum that matches the return code value, so it might produce an incorrect string."
  },
  "api/Unity.SaveData.PS5.Core.ReturnCodes.html": {
    "href": "api/Unity.SaveData.PS5.Core.ReturnCodes.html",
    "title": "Enum ReturnCodes | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum ReturnCodes A set of return codes that map to the Sony SCE error codes. Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public enum ReturnCodes : uint Fields Name Description SUCCESS SAVE_DATA_ERROR_PARAMETER Set the wrong parameter. SAVE_DATA_ERROR_NOT_INITIALIZED Not initialized save data library yet. SAVE_DATA_ERROR_OUT_OF_MEMORY Out of memory. SAVE_DATA_ERROR_BUSY Save data folder has already been mounted, or save data memory setup has already completed. SAVE_DATA_ERROR_NOT_MOUNTED Save data folder is not mounted. SAVE_DATA_ERROR_NO_PERMISSION Permission denied. SAVE_DATA_ERROR_FINGERPRINT_MISMATCH Fingerprint mismatch. SAVE_DATA_ERROR_EXISTS Save data already exists. SAVE_DATA_ERROR_NOT_FOUND Save data not found. DATA_ERROR_NO_SPACE_FS Not enough space for mounting save data at file system. SAVE_DATA_ERROR_INTERNAL Internal error. SAVE_DATA_ERROR_MOUNT_FULL Reached maximum mount value. SAVE_DATA_ERROR_BAD_MOUNTED Not mounted for writing. SAVE_DATA_ERROR_FILE_NOT_FOUND File not found. SAVE_DATA_ERROR_BROKEN Save data broken. SAVE_DATA_ERROR_INVALID_LOGIN_USER Invalid login user. InvalidMountPointName Mount point name is invalid during a file operation request."
  },
  "api/Unity.SaveData.PS5.Core.SaveDataCallbackEvent.html": {
    "href": "api/Unity.SaveData.PS5.Core.SaveDataCallbackEvent.html",
    "title": "Class SaveDataCallbackEvent | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class SaveDataCallbackEvent Callback class that contains the results of an asynchronous request or notification. Inheritance Object SaveDataCallbackEvent Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class SaveDataCallbackEvent Properties ApiCalled Function called to perform the request. For the notification service, provides the notification type. Declaration public FunctionTypes ApiCalled { get; } Property Value Type Description FunctionTypes Request The request instance that started the async request. Will be null for any Notification responses. Declaration public RequestBase Request { get; } Property Value Type Description RequestBase RequestId The request Id returned when the async request was made. Declaration public int RequestId { get; } Property Value Type Description Int32 Response The response passed when the request was made. For notifications, the plug-in creates this. Declaration public ResponseBase Response { get; } Property Value Type Description ResponseBase UserId The ID of the user who performed the request. Declaration public int UserId { get; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Core.SaveDataException.html": {
    "href": "api/Unity.SaveData.PS5.Core.SaveDataException.html",
    "title": "Class SaveDataException | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class SaveDataException Creates an exception to throw back to the Unity project. This can be created in the normal way or via an APIResult structure that has been returned from the native plug-in. Inheritance Object Exception SaveDataException Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class SaveDataException : Exception, ISerializable, _Exception Constructors SaveDataException() Empty exception. Declaration public SaveDataException() SaveDataException(String) Message-only exception. Declaration public SaveDataException(string message) Parameters Type Name Description String message Message string. SaveDataException(String, Exception) Message with an inner exception. Declaration public SaveDataException(string message, Exception inner) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception inner The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. Properties ExtendedMessage Gets the extended message for this exception. If the exception came from an error in the native plug-in, this includes any Sce error code, the .cpp filename, and the line number. The Sce error code is returned as a Hex character representation. Declaration public string ExtendedMessage { get; } Property Value Type Description String Filename If a native plug-in error occurred, returns the name of teh .cpp file. Declaration public string Filename { get; } Property Value Type Description String LineNumber If a native plug-in error occurred, returns the line number in the .cpp file. Declaration public int LineNumber { get; } Property Value Type Description Int32 ResultType The type of result. Can be success, warning, or error. Declaration public APIResultTypes ResultType { get; } Property Value Type Description APIResultTypes SceErrorCode If a native plug-in error occurred, returns the SCE error code. Declaration public int SceErrorCode { get; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Core.TitleId.html": {
    "href": "api/Unity.SaveData.PS5.Core.TitleId.html",
    "title": "Struct TitleId | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct TitleId Title ID of the transfer source save data Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public struct TitleId Fields DATA_TITLE_ID_DATA_SIZE Maximum size of the Title ID. Declaration public const int DATA_TITLE_ID_DATA_SIZE = 10 Field Value Type Description Int32 Properties Data The Title ID. Declaration public string Data { get; set; } Property Value Type Description String IsEmpty True if the Title ID is empty, false otherwise. Declaration public readonly bool IsEmpty { get; } Property Value Type Description Boolean Methods ToString() Converts the Title ID to a string. Declaration public override string ToString() Returns Type Description String Title ID Overrides ValueType.ToString()"
  },
  "api/Unity.SaveData.PS5.Core.UnmountWithBackupNotification.html": {
    "href": "api/Unity.SaveData.PS5.Core.UnmountWithBackupNotification.html",
    "title": "Class UnmountWithBackupNotification | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class UnmountWithBackupNotification Notification called after the backup which was triggered by unmounting a mount point has completed. See Inheritance Object ResponseBase UnmountWithBackupNotification Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Core Assembly : solution.dll Syntax public class UnmountWithBackupNotification : ResponseBase Constructors UnmountWithBackupNotification() Initializes a new instance of the UnmountWithBackupNotification class. Declaration public UnmountWithBackupNotification() Properties DirName Name of the save data folder that was backed up. Declaration public DirName DirName { get; } Property Value Type Description DirName UserId ID of the user who made the unmount request. Declaration public int UserId { get; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Delete.Deleting.DeleteRequest.html": {
    "href": "api/Unity.SaveData.PS5.Delete.Deleting.DeleteRequest.html",
    "title": "Class Deleting.DeleteRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Deleting.DeleteRequest Requests to to delete a save data folder identified by its name. Inheritance Object RequestBase Deleting.DeleteRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Delete Assembly : solution.dll Syntax public class DeleteRequest : RequestBase Constructors DeleteRequest() Initializes a new instance of the Deleting.DeleteRequest class. Declaration public DeleteRequest() Properties DirName The name of the folder to delete. Declaration public DirName DirName { get; set; } Property Value Type Description DirName"
  },
  "api/Unity.SaveData.PS5.Delete.Deleting.html": {
    "href": "api/Unity.SaveData.PS5.Delete.Deleting.html",
    "title": "Class Deleting | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Deleting Deletes a save data folder. Inheritance Object Deleting Namespace : Unity.SaveData.PS5.Delete Assembly : solution.dll Syntax public class Deleting Methods Delete(Deleting.DeleteRequest, EmptyResponse) This method is used to delete a save data folder. For more information, see Sony developer documentation on sceSaveDataDelete for PS5. Declaration public static int Delete(Deleting.DeleteRequest request, EmptyResponse response) Parameters Type Name Description Deleting.DeleteRequest request The save data folder to delete. EmptyResponse response This response contains a return code and doesn't contain any actual data. Returns Type Description Int32 If the operation is asynchronous, the function provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or if an internal error has occured inside the plug-in."
  },
  "api/Unity.SaveData.PS5.Delete.html": {
    "href": "api/Unity.SaveData.PS5.Delete.html",
    "title": "Namespace Unity.SaveData.PS5.Delete | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Delete Classes Deleting Deletes a save data folder. Deleting.DeleteRequest Requests to to delete a save data folder identified by its name."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.Animation.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.Animation.html",
    "title": "Enum Dialogs.Animation | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.Animation Animation setting. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum Animation Fields Name Description On Enable animation. See SCE_SAVE_DATA_DIALOG_ANIMATION_ON for details. Off Disable animation. See SCE_SAVE_DATA_DIALOG_ANIMATION_OFF for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.AnimationParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.AnimationParam.html",
    "title": "Class Dialogs.AnimationParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.AnimationParam Animation setting. Inheritance Object Dialogs.AnimationParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class AnimationParam Constructors AnimationParam() Initializes a new instance of the Mounting.MountRequest class. Declaration public AnimationParam() AnimationParam(Dialogs.Animation, Dialogs.Animation) Initializes a new instance of the Mounting.MountRequest class. Declaration public AnimationParam(Dialogs.Animation ok, Dialogs.Animation cancel) Parameters Type Name Description Dialogs.Animation ok Animation for OK Dialogs.Animation cancel Animation for Cancel Properties UserCancel Set animation for when the user cancels the dialog. Declaration public Dialogs.Animation UserCancel { get; set; } Property Value Type Description Dialogs.Animation UserOK Animation setting when the user confirms the dialog (OK or similar). Declaration public Dialogs.Animation UserOK { get; set; } Property Value Type Description Dialogs.Animation"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.CloseParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.CloseParam.html",
    "title": "Class Dialogs.CloseParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.CloseParam Parameters for closing the save data dialog. Inheritance Object Dialogs.CloseParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class CloseParam Properties Anim Animation setting when closing the save data dialog. Declaration public Dialogs.Animation Anim { get; set; } Property Value Type Description Dialogs.Animation"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogButtonIds.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogButtonIds.html",
    "title": "Enum Dialogs.DialogButtonIds | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.DialogButtonIds Selected button ID. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum DialogButtonIds Fields Name Description Invalid No button was selected. See SCE_SAVE_DATA_DIALOG_BUTTON_ID_INVALID for details. OK The \"OK\" button was selected. See SCE_SAVE_DATA_DIALOG_BUTTON_ID_OK for details. Yes The \"Yes\" button was selected. See SCE_SAVE_DATA_DIALOG_BUTTON_ID_YES for details. No The \"No\" button was selected. See SCE_SAVE_DATA_DIALOG_BUTTON_ID_NO for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogButtonTypes.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogButtonTypes.html",
    "title": "Enum Dialogs.DialogButtonTypes | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.DialogButtonTypes Type of button displayed on the user message dialog. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum DialogButtonTypes Fields Name Description OK 1 button, the \"OK\" button. See SCE_SAVE_DATA_DIALOG_BUTTON_TYPE_OK for details. YesNo 2 buttons, the \"Yes\" button and the \"No\" button. See SCE_SAVE_DATA_DIALOG_BUTTON_TYPE_YESNO for details. None Do not display buttons. See SCE_SAVE_DATA_DIALOG_BUTTON_TYPE_NONE for details. OKCancel 2 buttons, the \"OK\" button and the \"Cancel\" button. See SCE_SAVE_DATA_DIALOG_BUTTON_TYPE_OKCANCEL for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogCallResults.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogCallResults.html",
    "title": "Enum Dialogs.DialogCallResults | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.DialogCallResults Dialog call result. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum DialogCallResults Fields Name Description OK Closed by user operation or Close(Dialogs.CloseParam) . See SCE_COMMON_DIALOG_RESULT_OK for details. UserCanceled Canceled by the user. See SCE_COMMON_DIALOG_RESULT_USER_CANCELED for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogMode.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogMode.html",
    "title": "Enum Dialogs.DialogMode | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.DialogMode Operation mode of the save data dialog. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum DialogMode Fields Name Description Invalid Invalid mode. See SCE_SAVE_DATA_DIALOG_MODE_INVALID for details. List Save data list display mode. See SCE_SAVE_DATA_DIALOG_MODE_LIST for details. UserMsg Application-specified message display mode. See SCE_SAVE_DATA_DIALOG_MODE_USER_MSG for details. SystemMsg System-defined message display mode. See SCE_SAVE_DATA_DIALOG_MODE_SYSTEM_MSG for details. ErrorCode Error code display mode. See SCE_SAVE_DATA_DIALOG_MODE_ERROR_CODE for details. ProgressBar Progress bar display mode. See SCE_SAVE_DATA_DIALOG_MODE_PROGRESS_BAR for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogResult.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogResult.html",
    "title": "Class Dialogs.DialogResult | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.DialogResult Save data dialog call result. Inheritance Object Dialogs.DialogResult Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class DialogResult Properties ButtonId The ID of the button that was pressed. Declaration public Dialogs.DialogButtonIds ButtonId { get; } Property Value Type Description Dialogs.DialogButtonIds CallResult The dialog call result. Can be either OK or UserCanceled. Declaration public Dialogs.DialogCallResults CallResult { get; } Property Value Type Description Dialogs.DialogCallResults DirName Folder name of the displayed or selected save data. Declaration public DirName DirName { get; } Property Value Type Description DirName ErrorCode An SCE error code if the GetDialogResult() failed. Declaration public int ErrorCode { get; } Property Value Type Description Int32 Mode Mode at the time of call. Declaration public Dialogs.DialogMode Mode { get; } Property Value Type Description Dialogs.DialogMode Param Detailed save data information. Declaration public SaveDataParams Param { get; } Property Value Type Description SaveDataParams"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogStatus.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogStatus.html",
    "title": "Enum Dialogs.DialogStatus | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.DialogStatus Status of the save data dialog. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum DialogStatus Fields Name Description None Save data dialog is not running. See SCE_COMMON_DIALOG_STATUS_NONE for details. Initialized Save data dialog is initialized. See SCE_COMMON_DIALOG_STATUS_INITIALIZED for details. Running Save data dialog is being displayed. See SCE_COMMON_DIALOG_STATUS_RUNNING for details. Finished Save data dialog is closed. See SCE_COMMON_DIALOG_STATUS_FINISHED for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogType.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.DialogType.html",
    "title": "Enum Dialogs.DialogType | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.DialogType Type of message to display (save, load, or delete). Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum DialogType Fields Name Description Invalid Inalvid type. See SCE_SAVE_DATA_DIALOG_TYPE_INVALID for details. Save Display message for save processing. See SCE_SAVE_DATA_DIALOG_TYPE_SAVE for details. Load Display message for load processing. See SCE_SAVE_DATA_DIALOG_TYPE_LOAD for details. Delete Display message for delete processing. See SCE_SAVE_DATA_DIALOG_TYPE_DELETE for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.ErrorCodeParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.ErrorCodeParam.html",
    "title": "Class Dialogs.ErrorCodeParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.ErrorCodeParam Parameters for error code display mode. Inheritance Object Dialogs.ErrorCodeParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class ErrorCodeParam Properties ErrorCode Error code to be displayed. Declaration public int ErrorCode { get; set; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.FocusPos.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.FocusPos.html",
    "title": "Enum Dialogs.FocusPos | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.FocusPos Initial focus position. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum FocusPos Fields Name Description ListHead List head. See SCE_SAVE_DATA_DIALOG_FOCUS_POS_LISTHEAD for details. ListTail List end. See SCE_SAVE_DATA_DIALOG_FOCUS_POS_LISTTAIL for details. DataHead Data head (same as list head). See SCE_SAVE_DATA_DIALOG_FOCUS_POS_DATAHEAD for details. DataTail Data end (same as list end). See SCE_SAVE_DATA_DIALOG_FOCUS_POS_DATATAIL for details. DataLatest Latest data. See SCE_SAVE_DATA_DIALOG_FOCUS_POS_DATALATEST for details. DataOldest Oldest data. See SCE_SAVE_DATA_DIALOG_FOCUS_POS_DATAOLDEST for details. DirName FocusPosDirName . See SCE_SAVE_DATA_DIALOG_FOCUS_POS_DIRNAME for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.html",
    "title": "Class Dialogs | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs Save data dialog system. Inheritance Object Dialogs Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class Dialogs Methods Close(Dialogs.CloseParam) Closes the save data dialog. Declaration public static void Close(Dialogs.CloseParam closeParam) Parameters Type Name Description Dialogs.CloseParam closeParam Parameters for closing the save data dialog. DialogGetStatus() Gets operation status of the save data dialog. Declaration public static Dialogs.DialogStatus DialogGetStatus() Returns Type Description Dialogs.DialogStatus The status of the save data dialog. DialogIsReadyToDisplay() True if the dialog is ready to display, false otherwise. Declaration public static bool DialogIsReadyToDisplay() Returns Type Description Boolean Returns true when the dialog is ready to display. OpenDialog(Dialogs.OpenDialogRequest, Dialogs.OpenDialogResponse) This method is used to open a save data dialog. For more information, see Sony's documentation on sceSaveDataDialogOpen for the PS5. Declaration public static int OpenDialog(Dialogs.OpenDialogRequest request, Dialogs.OpenDialogResponse response) Parameters Type Name Description Dialogs.OpenDialogRequest request The save data dialog parameters. Dialogs.OpenDialogResponse response The results of the dialog after it has been closed. Returns Type Description Int32 If the operation is asynchronous, the function provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. ProgressBarInc(UInt32) Adds the progress rate to the progress bar on the save data dialog. Declaration public static void ProgressBarInc(uint delta) Parameters Type Name Description UInt32 delta Progress additional value ProgressBarSetValue(UInt32) Sets the progress rate of the progress bar in the save data dialog. Declaration public static void ProgressBarSetValue(uint rate) Parameters Type Name Description UInt32 rate Progress value"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.Items.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.Items.html",
    "title": "Class Dialogs.Items | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.Items Parameters for displaying save data. Inheritance Object Dialogs.Items Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class Items Fields DIR_NAME_MAXSIZE The maximum amount of targets that can be set. Declaration public const int DIR_NAME_MAXSIZE = 1024 Field Value Type Description Int32 Properties DirNameCount Number of target save data directories. Set this using DirNames . Declaration public uint DirNameCount { get; } Property Value Type Description UInt32 DirNames Array of target save data folder names. Declaration public DirName[] DirNames { get; set; } Property Value Type Description DirName [] FocusPos Initial focus position on the list. Declaration public Dialogs.FocusPos FocusPos { get; set; } Property Value Type Description Dialogs.FocusPos FocusPosDirName The list will focus on this folder initially. Only valid is List is set in the Dialogs.OpenDialogRequest object. Declaration public DirName FocusPosDirName { get; set; } Property Value Type Description DirName Exceptions Type Condition SaveDataException Will throw an exception is FocusPos isn't set to DirName . ItemStyle Display style for the save data information. Declaration public Dialogs.ItemStyle ItemStyle { get; set; } Property Value Type Description Dialogs.ItemStyle"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.ItemStyle.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.ItemStyle.html",
    "title": "Enum Dialogs.ItemStyle | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.ItemStyle Display style of the save data. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum ItemStyle Fields Name Description DateSizeSubtitle 3-line display. 1st line: Title, 2nd line: Date and Size, 3rd line: Subtitle. See SCE_SAVE_DATA_DIALOG_ITEM_STYLE_TITLE_DATESIZE_SUBTITLE for details. SubtitleDataSize 3-line display. 1st line: Title, 2nd line: Subtitle, 3rd line: Date and Size. See SCE_SAVE_DATA_DIALOG_ITEM_STYLE_TITLE_SUBTITLE_DATESIZE for details. DataSize 2-line display. 1st line: Title, 2nd line: Date and Size. See SCE_SAVE_DATA_DIALOG_ITEM_STYLE_TITLE_DATESIZE for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.NewItem.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.NewItem.html",
    "title": "Class Dialogs.NewItem | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.NewItem Parameters for new save data. Inheritance Object Dialogs.NewItem Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class NewItem Fields DATA_ICON_HEIGHT_FULL The required height of the full-size icon. Declaration public const int DATA_ICON_HEIGHT_FULL = 436 Field Value Type Description Int32 DATA_ICON_HEIGHT_SMALL The required height of the icon thumbnail. Declaration public const int DATA_ICON_HEIGHT_SMALL = 388 Field Value Type Description Int32 DATA_ICON_WIDTH_FULL The required width of the full-size icon. Declaration public const int DATA_ICON_WIDTH_FULL = 776 Field Value Type Description Int32 DATA_ICON_WIDTH_SMALL The required width of the icon thumbnail. Declaration public const int DATA_ICON_WIDTH_SMALL = 688 Field Value Type Description Int32 FILEPATH_LENGTH The maximum length of the path name to an icon file. Declaration public const int FILEPATH_LENGTH = 127 Field Value Type Description Int32 ICON_FILE_MAXSIZE The maximum number of bytes in the icon PNG. Declaration public const int ICON_FILE_MAXSIZE = 1353344 Field Value Type Description Int32 TITLE_MAXSIZE The maximum length of the message. Declaration public const int TITLE_MAXSIZE = 127 Field Value Type Description Int32 Properties IconPath Path to a PNG icon file. Declaration public string IconPath { get; set; } Property Value Type Description String RawPNG An array of bytes that contains the PNG data. Declaration public byte[] RawPNG { get; set; } Property Value Type Description Byte [] Title Title of the new save data. This cannot contain line breaks. Declaration public string Title { get; set; } Property Value Type Description String"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.OpenDialogRequest.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.OpenDialogRequest.html",
    "title": "Class Dialogs.OpenDialogRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.OpenDialogRequest Save data dialog parameters. Inheritance Object RequestBase Dialogs.OpenDialogRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class OpenDialogRequest : RequestBase Constructors OpenDialogRequest() Initializes a new instance of the Dialogs.OpenDialogRequest class. Declaration public OpenDialogRequest() Properties Animations Animation setting parameters. Declaration public Dialogs.AnimationParam Animations { get; set; } Property Value Type Description Dialogs.AnimationParam DispType Type of message to display (save, load, or delete). Declaration public Dialogs.DialogType DispType { get; set; } Property Value Type Description Dialogs.DialogType ErrorCode Error code display parameters. Declaration public Dialogs.ErrorCodeParam ErrorCode { get; set; } Property Value Type Description Dialogs.ErrorCodeParam Items Save data display parameters. Declaration public Dialogs.Items Items { get; set; } Property Value Type Description Dialogs.Items Mode Operation mode of the save data dialog. Declaration public Dialogs.DialogMode Mode { get; set; } Property Value Type Description Dialogs.DialogMode NewItem Parameters for a new save data. Declaration public Dialogs.NewItem NewItem { get; set; } Property Value Type Description Dialogs.NewItem Option Option setting parameters. Declaration public Dialogs.OptionParam Option { get; set; } Property Value Type Description Dialogs.OptionParam ProgressBar Progress bar display parameters. Declaration public Dialogs.ProgressBarParam ProgressBar { get; set; } Property Value Type Description Dialogs.ProgressBarParam SystemMessage Display parameters for the system-defined message. Declaration public Dialogs.SystemMessageParam SystemMessage { get; set; } Property Value Type Description Dialogs.SystemMessageParam UserMessage Display parameters for the application-specified message. Declaration public Dialogs.UserMessageParam UserMessage { get; set; } Property Value Type Description Dialogs.UserMessageParam"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.OpenDialogResponse.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.OpenDialogResponse.html",
    "title": "Class Dialogs.OpenDialogResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.OpenDialogResponse Save data dialog results. Inheritance Object ResponseBase Dialogs.OpenDialogResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class OpenDialogResponse : ResponseBase Constructors OpenDialogResponse() Initializes a new instance of the Dialogs.OpenDialogResponse class. Declaration public OpenDialogResponse() Properties Result The dialog result. Declaration public Dialogs.DialogResult Result { get; } Property Value Type Description Dialogs.DialogResult"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.OptionBack.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.OptionBack.html",
    "title": "Enum Dialogs.OptionBack | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.OptionBack Indicates whether the \"Back\" operation is enabled or disabled. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum OptionBack Fields Name Description Enable Enable the \"Back\" operation. See SCE_SAVE_DATA_DIALOG_OPTION_BACK_ENABLE for details. Disable Disable the \"Back\" operation. See SCE_SAVE_DATA_DIALOG_OPTION_BACK_DISABLE for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.OptionParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.OptionParam.html",
    "title": "Class Dialogs.OptionParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.OptionParam Parameters to set save data dialog options. Inheritance Object Dialogs.OptionParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class OptionParam Properties Back Enable or disable the \"Back\" feature. Declaration public Dialogs.OptionBack Back { get; set; } Property Value Type Description Dialogs.OptionBack"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.ProgressBarParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.ProgressBarParam.html",
    "title": "Class Dialogs.ProgressBarParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.ProgressBarParam Parameters for progress bar display mode. Inheritance Object Dialogs.ProgressBarParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class ProgressBarParam Fields MESSAGE_MAXSIZE The maximum length of the message. Declaration public const int MESSAGE_MAXSIZE = 255 Field Value Type Description Int32 Properties BarType Progress bar type. Declaration public Dialogs.ProgressBarType BarType { get; set; } Property Value Type Description Dialogs.ProgressBarType Message Message string. This can be empty. Declaration public string Message { get; set; } Property Value Type Description String SysMsgType Type of the system message to display. Declaration public Dialogs.ProgressSystemMessageType SysMsgType { get; set; } Property Value Type Description Dialogs.ProgressSystemMessageType"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.ProgressBarType.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.ProgressBarType.html",
    "title": "Enum Dialogs.ProgressBarType | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.ProgressBarType Progress bar type. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum ProgressBarType Fields Name Description Percentage Progress bar expressed as a percentage. See SCE_SAVE_DATA_DIALOG_PROGRESSBAR_TYPE_PERCENTAGE for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.ProgressSystemMessageType.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.ProgressSystemMessageType.html",
    "title": "Enum Dialogs.ProgressSystemMessageType | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.ProgressSystemMessageType Type of progress bar system message to display. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum ProgressSystemMessageType Fields Name Description Invalid Arbitrary string specified to Message . See SCE_SAVE_DATA_DIALOG_PRGRESS_SYSMSG_TYPE_INVALID for details. Progress System-defined message such as \"Saving...\", \"Loading..\", etc., according to the message display type. See SCE_SAVE_DATA_DIALOG_PRGRESS_SYSMSG_TYPE_PROGRESS for details. Restore \"Restoring saved data...\". See SCE_SAVE_DATA_DIALOG_PRGRESS_SYSMSG_TYPE_RESTORE for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.SystemMessageParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.SystemMessageParam.html",
    "title": "Class Dialogs.SystemMessageParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.SystemMessageParam Parameters for system-defined message display mode. Inheritance Object Dialogs.SystemMessageParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class SystemMessageParam Properties SysMsgType Type of system-defined message to display. Declaration public Dialogs.SystemMessageType SysMsgType { get; set; } Property Value Type Description Dialogs.SystemMessageType Value Number to add to defined message. Declaration public ulong Value { get; set; } Property Value Type Description UInt64"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.SystemMessageType.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.SystemMessageType.html",
    "title": "Enum Dialogs.SystemMessageType | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.SystemMessageType Types of system prepared message. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum SystemMessageType Remarks This displays various messages depending on the dialog type Dialogs.DialogType and the system message. See the SaveData SDK documention for details on what message is displayed based on the dialog type and system message. Fields Name Description Invalid See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_INVALID for details. NoData See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_NODATA for details. Confirm See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_CONFIRM for details. Overwrite See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_OVERWRITE for details. NoSpace See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_NOSPACE for details. Progress See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_PROGRESS for details. Corrupted See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_FILE_CORRUPTED for details. Finished See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_FINISHED for details. NoSpaceContinuable See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_NOSPACE_CONTINUABLE for details. TotalSizeExceeded See SCE_SAVE_DATA_DIALOG_SYSMSG_TYPE_TOTAL_SIZE_EXCEEDED for details."
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.UserMessageParam.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.UserMessageParam.html",
    "title": "Class Dialogs.UserMessageParam | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Dialogs.UserMessageParam Parameters for the application's specified message display mode. Inheritance Object Dialogs.UserMessageParam Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class UserMessageParam Fields MESSAGE_MAXSIZE The maximum length of the message. Declaration public const int MESSAGE_MAXSIZE = 255 Field Value Type Description Int32 Properties ButtonType Type of button displayed on the dialog. Declaration public Dialogs.DialogButtonTypes ButtonType { get; set; } Property Value Type Description Dialogs.DialogButtonTypes Message Message to display in the dialog. Declaration public string Message { get; set; } Property Value Type Description String MsgType Dialog type. Declaration public Dialogs.UserMessageType MsgType { get; set; } Property Value Type Description Dialogs.UserMessageType"
  },
  "api/Unity.SaveData.PS5.Dialog.Dialogs.UserMessageType.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.Dialogs.UserMessageType.html",
    "title": "Enum Dialogs.UserMessageType | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Dialogs.UserMessageType User message dialog type. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public enum UserMessageType Fields Name Description Normal Display as normal dialog. See SCE_SAVE_DATA_DIALOG_USERMSG_TYPE_NORMAL for details. Error Display as error display dialog. See SCE_SAVE_DATA_DIALOG_USERMSG_TYPE_ERROR for details."
  },
  "api/Unity.SaveData.PS5.Dialog.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.html",
    "title": "Namespace Unity.SaveData.PS5.Dialog | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Dialog Classes Dialogs Save data dialog system. Dialogs.AnimationParam Animation setting. Dialogs.CloseParam Parameters for closing the save data dialog. Dialogs.DialogResult Save data dialog call result. Dialogs.ErrorCodeParam Parameters for error code display mode. Dialogs.Items Parameters for displaying save data. Dialogs.NewItem Parameters for new save data. Dialogs.OpenDialogRequest Save data dialog parameters. Dialogs.OpenDialogResponse Save data dialog results. Dialogs.OptionParam Parameters to set save data dialog options. Dialogs.ProgressBarParam Parameters for progress bar display mode. Dialogs.SystemMessageParam Parameters for system-defined message display mode. Dialogs.UserMessageParam Parameters for the application's specified message display mode. SaveDataDialogProcess Dialog state machine for running the save, load, and delete save data processes. Enums Dialogs.Animation Animation setting. Dialogs.DialogButtonIds Selected button ID. Dialogs.DialogButtonTypes Type of button displayed on the user message dialog. Dialogs.DialogCallResults Dialog call result. Dialogs.DialogMode Operation mode of the save data dialog. Dialogs.DialogStatus Status of the save data dialog. Dialogs.DialogType Type of message to display (save, load, or delete). Dialogs.FocusPos Initial focus position. Dialogs.ItemStyle Display style of the save data. Dialogs.OptionBack Indicates whether the \"Back\" operation is enabled or disabled. Dialogs.ProgressBarType Progress bar type. Dialogs.ProgressSystemMessageType Type of progress bar system message to display. Dialogs.SystemMessageType Types of system prepared message. Dialogs.UserMessageType User message dialog type. Delegates SaveDataDialogProcess.AllowNewItemTest Returns true if a dialog can show the New Item button."
  },
  "api/Unity.SaveData.PS5.Dialog.SaveDataDialogProcess.AllowNewItemTest.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.SaveDataDialogProcess.AllowNewItemTest.html",
    "title": "Delegate SaveDataDialogProcess.AllowNewItemTest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Delegate SaveDataDialogProcess.AllowNewItemTest Returns true if a dialog can show the New Item button. Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public delegate bool AllowNewItemTest(Searching.DirNameSearchResponse response); Parameters Type Name Description Searching.DirNameSearchResponse response The response from the search. Use this to determine if there are too many save data items. Returns Type Description Boolean Returns true if the New Item button should be shown, false otherwise."
  },
  "api/Unity.SaveData.PS5.Dialog.SaveDataDialogProcess.html": {
    "href": "api/Unity.SaveData.PS5.Dialog.SaveDataDialogProcess.html",
    "title": "Class SaveDataDialogProcess | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class SaveDataDialogProcess Dialog state machine for running the save, load, and delete save data processes. Inheritance Object SaveDataDialogProcess Namespace : Unity.SaveData.PS5.Dialog Assembly : solution.dll Syntax public class SaveDataDialogProcess Methods StartDeleteDialogProcess(Int32) Starts the delete process as a Unity coroutine. Declaration public static IEnumerator StartDeleteDialogProcess(int userId) Parameters Type Name Description Int32 userId The ID of the user who will save data. Returns Type Description IEnumerator An enumerator that can be used in a Unity coroutine. StartLoadDialogProcess(Int32, FileOps.FileOperationRequest, FileOps.FileOperationResponse) Starts the load process as a Unity coroutine. Declaration public static IEnumerator StartLoadDialogProcess(int userId, FileOps.FileOperationRequest fileRequest, FileOps.FileOperationResponse fileResponse) Parameters Type Name Description Int32 userId The ID of the user who will save data. FileOps.FileOperationRequest fileRequest The custom file IO operations for the actual files inside the save data. FileOps.FileOperationResponse fileResponse The custom file IO response containing the results of the file operation. Returns Type Description IEnumerator An enumerator which can be used in a Unity coroutine. StartSaveDialogProcess(Int32, Dialogs.NewItem, DirName, UInt64, SaveDataParams, FileOps.FileOperationRequest, FileOps.FileOperationResponse, Boolean, SaveDataDialogProcess.AllowNewItemTest) Start the save process as a Unity coroutine. Declaration public static IEnumerator StartSaveDialogProcess(int userId, Dialogs.NewItem newItem, DirName newDirName, ulong newSaveDataBlocks, SaveDataParams saveDataParams, FileOps.FileOperationRequest fileRequest, FileOps.FileOperationResponse fileResponse, bool backup, SaveDataDialogProcess.AllowNewItemTest allowNewItemCB = null) Parameters Type Name Description Int32 userId The ID of the user who will save data. Dialogs.NewItem newItem The new item details displayed in the save list. DirName newDirName The folder name of a new save data if new save is selected from the list. UInt64 newSaveDataBlocks The size of a new save data if new save is selected from the list. SaveDataParams saveDataParams The save data parameters for a new or overwritten save data. FileOps.FileOperationRequest fileRequest The custom file IO operations for the actual files inside the save data. FileOps.FileOperationResponse fileResponse The custom file IO response containing the results of the file operation. Boolean backup Indicates whether the save data should be backed up when saving completes. This generates a notification after the backup completes. SaveDataDialogProcess.AllowNewItemTest allowNewItemCB A callback allows the caller to specify whether the dialog should allow a new save data, or that the user must overwrite an existing one. Returns Type Description IEnumerator An enumerator that can be used in a Unity coroutine."
  },
  "api/Unity.SaveData.PS5.Files.html": {
    "href": "api/Unity.SaveData.PS5.Files.html",
    "title": "Namespace Unity.SaveData.PS5.Files | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Files Classes Progress Progress for various background save data tasks."
  },
  "api/Unity.SaveData.PS5.Files.Progress.html": {
    "href": "api/Unity.SaveData.PS5.Files.Progress.html",
    "title": "Class Progress | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Progress Progress for various background save data tasks. Inheritance Object Progress Namespace : Unity.SaveData.PS5.Files Assembly : solution.dll Syntax public class Progress Methods ClearProgress() Clears task progress. Declaration public static void ClearProgress() GetProgress() Gets task progress. Declaration public static float GetProgress() Returns Type Description Single Progress (0.0f to 1.0f)"
  },
  "api/Unity.SaveData.PS5.html": {
    "href": "api/Unity.SaveData.PS5.html",
    "title": "Namespace Unity.SaveData.PS5 | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5 Classes Main Main entry point to the SaveData plug-in and initialization. Delegates Main.EventHandler Delegate event handler that defines the callback event."
  },
  "api/Unity.SaveData.PS5.Info.FileOps.FileOperationRequest.html": {
    "href": "api/Unity.SaveData.PS5.Info.FileOps.FileOperationRequest.html",
    "title": "Class FileOps.FileOperationRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class FileOps.FileOperationRequest Base request class for custom file operations. Override the DoFileOperations method to customize file handling inside a save data folder. Use System.IO .NET methods for file handling. Prefix any folder or file names with the save data mount point name as the root path. Inheritance Object RequestBase FileOps.FileOperationRequest Tests.TestEnumerateFilesRequest Tests.TestReadFilesRequest Tests.TestWriteFilesRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Info Assembly : solution.dll Syntax public abstract class FileOperationRequest : RequestBase Constructors FileOperationRequest() Initializes a new instance of the FileOps.FileOperationRequest class. Declaration public FileOperationRequest() Properties MountPointName The mount point name to perform the file operations. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName Methods DoFileOperations(Mounting.MountPoint, FileOps.FileOperationResponse) Override this method to perform file operations. Declaration public abstract void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response) Parameters Type Name Description Mounting.MountPoint mp The mount point root path to use. FileOps.FileOperationResponse response The custom response object used to store results from any file operations."
  },
  "api/Unity.SaveData.PS5.Info.FileOps.FileOperationResponse.html": {
    "href": "api/Unity.SaveData.PS5.Info.FileOps.FileOperationResponse.html",
    "title": "Class FileOps.FileOperationResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class FileOps.FileOperationResponse Base response class for custom file operations. Inherit from this class to provide custom file handling results. Inheritance Object ResponseBase FileOps.FileOperationResponse Tests.TestEnumerateFilesResponse Tests.TestReadFilesResponse Tests.TestWriteFilesResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Info Assembly : solution.dll Syntax public abstract class FileOperationResponse : ResponseBase Constructors FileOperationResponse() Initializes a new instance of the FileOps.FileOperationResponse class. Declaration public FileOperationResponse() Properties Progress Gets the current progress of the file operation. The value can be in the 0.0 to 1.0 range. Declaration public float Progress { get; } Property Value Type Description Single Methods UpdateProgress(Single) Update the progress value of the file operation. Used by the dialog system when displaying a progress bar. Declaration public void UpdateProgress(float progress) Parameters Type Name Description Single progress Progress value (0.0 to 1.0)"
  },
  "api/Unity.SaveData.PS5.Info.FileOps.html": {
    "href": "api/Unity.SaveData.PS5.Info.FileOps.html",
    "title": "Class FileOps | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class FileOps Perform file operations on mounted save data. Inheritance Object FileOps Namespace : Unity.SaveData.PS5.Info Assembly : solution.dll Syntax public class FileOps Methods CustomFileOp(FileOps.FileOperationRequest, FileOps.FileOperationResponse) Use this method to perform file operations on a save data folder. Declaration public static int CustomFileOp(FileOps.FileOperationRequest request, FileOps.FileOperationResponse response) Parameters Type Name Description FileOps.FileOperationRequest request The custom request object to perform the file operations. FileOps.FileOperationResponse response The custom response object to store any results from file operations. Returns Type Description Int32 If the operation is asynchronous, the function provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in."
  },
  "api/Unity.SaveData.PS5.Info.html": {
    "href": "api/Unity.SaveData.PS5.Info.html",
    "title": "Namespace Unity.SaveData.PS5.Info | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Info Classes FileOps Perform file operations on mounted save data. FileOps.FileOperationRequest Base request class for custom file operations. Override the DoFileOperations method to customize file handling inside a save data folder. Use System.IO .NET methods for file handling. Prefix any folder or file names with the save data mount point name as the root path. FileOps.FileOperationResponse Base response class for custom file operations. Inherit from this class to provide custom file handling results. Icon PNG image store from NpToolkit, in bytes. Structs SaveDataInfo Information about the save data size. SaveDataParams Save data paramters."
  },
  "api/Unity.SaveData.PS5.Info.Icon.html": {
    "href": "api/Unity.SaveData.PS5.Info.Icon.html",
    "title": "Class Icon | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Icon PNG image store from NpToolkit, in bytes. Inheritance Object Icon Namespace : Unity.SaveData.PS5.Info Assembly : solution.dll Syntax public class Icon Properties Height Icon height, in pixels. Declaration public int Height { get; } Property Value Type Description Int32 RawBytes Gets the RawBytes from the Icon. You can use these to create a new Texture2d, for example. Declaration public byte[] RawBytes { get; } Property Value Type Description Byte [] Width Icon width, in pixels. Declaration public int Width { get; } Property Value Type Description Int32"
  },
  "api/Unity.SaveData.PS5.Info.SaveDataInfo.html": {
    "href": "api/Unity.SaveData.PS5.Info.SaveDataInfo.html",
    "title": "Struct SaveDataInfo | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct SaveDataInfo Information about the save data size. Namespace : Unity.SaveData.PS5.Info Assembly : solution.dll Syntax public struct SaveDataInfo Properties Blocks Total size of the save data. Declaration public readonly ulong Blocks { get; } Property Value Type Description UInt64 FreeBlocks Free space on the save data. Declaration public readonly ulong FreeBlocks { get; } Property Value Type Description UInt64"
  },
  "api/Unity.SaveData.PS5.Info.SaveDataParams.html": {
    "href": "api/Unity.SaveData.PS5.Info.SaveDataParams.html",
    "title": "Struct SaveDataParams | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct SaveDataParams Save data paramters. Namespace : Unity.SaveData.PS5.Info Assembly : solution.dll Syntax public struct SaveDataParams Fields DETAIL_MAXSIZE Maximum length of the save data details text, in bytes. Declaration public const int DETAIL_MAXSIZE = 1023 Field Value Type Description Int32 SUBTITLE_MAXSIZE Maximum length of the save data subtitle text, in bytes. Declaration public const int SUBTITLE_MAXSIZE = 127 Field Value Type Description Int32 TITLE_MAXSIZE Maximum length of the save data title text, in bytes. Declaration public const int TITLE_MAXSIZE = 127 Field Value Type Description Int32 Properties Detail Name of the save data details text. Declaration public string Detail { get; set; } Property Value Type Description String SubTitle Name of the save data subtitle. Declaration public string SubTitle { get; set; } Property Value Type Description String Time Date and time of last update. Declaration public readonly DateTime Time { get; } Property Value Type Description DateTime Title Name of the save data title. Declaration public string Title { get; set; } Property Value Type Description String UserParam User parameter of the save data. Declaration public uint UserParam { get; set; } Property Value Type Description UInt32"
  },
  "api/Unity.SaveData.PS5.Initialization.html": {
    "href": "api/Unity.SaveData.PS5.Initialization.html",
    "title": "Namespace Unity.SaveData.PS5.Initialization | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Initialization Structs InitResult The initialisation state of SaveData InitSettings Configures initialization settings for the Save Data plug-in. SceSDKVersion Sce SDK Version Enums ThreadAffinity Set the affinity mask to enable NpToolkit to run on multiple cores. Important - Core0 and Core1 and not provided, as these are the main Update and Gfx cores and should not be used."
  },
  "api/Unity.SaveData.PS5.Initialization.InitResult.html": {
    "href": "api/Unity.SaveData.PS5.Initialization.InitResult.html",
    "title": "Struct InitResult | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct InitResult The initialisation state of SaveData Namespace : Unity.SaveData.PS5.Initialization Assembly : solution.dll Syntax public struct InitResult Properties DllVersion The current Version number for the SonyNp assembly Declaration public readonly Version DllVersion { get; } Property Value Type Description Version Initialized Returns true if NpToolkit has been initialized correctly, false otherwise. Declaration public readonly bool Initialized { get; } Property Value Type Description Boolean SceSDKVersion The current SDK version as Major, Minor, and Patch values. Declaration public readonly SceSDKVersion SceSDKVersion { get; } Property Value Type Description SceSDKVersion SceSDKVersionValue The current SDK version the native plug-in is built with Declaration public readonly uint SceSDKVersionValue { get; } Property Value Type Description UInt32"
  },
  "api/Unity.SaveData.PS5.Initialization.InitSettings.html": {
    "href": "api/Unity.SaveData.PS5.Initialization.InitSettings.html",
    "title": "Struct InitSettings | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct InitSettings Configures initialization settings for the Save Data plug-in. Namespace : Unity.SaveData.PS5.Initialization Assembly : solution.dll Syntax public struct InitSettings Properties Affinity The current Version number for the SonyNp assembly. Declaration public ThreadAffinity Affinity { get; set; } Property Value Type Description ThreadAffinity Methods Init() By default, initializes the thread settings to use cores 2, 3, 4, and 5. Declaration public void Init()"
  },
  "api/Unity.SaveData.PS5.Initialization.SceSDKVersion.html": {
    "href": "api/Unity.SaveData.PS5.Initialization.SceSDKVersion.html",
    "title": "Struct SceSDKVersion | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct SceSDKVersion Sce SDK Version Namespace : Unity.SaveData.PS5.Initialization Assembly : solution.dll Syntax public struct SceSDKVersion Fields Major Major version Declaration public uint Major Field Value Type Description UInt32 Minor Minor verson Declaration public uint Minor Field Value Type Description UInt32 Patch Patch version Declaration public uint Patch Field Value Type Description UInt32 Methods ToString() Returns the SDK version as a string separated into Major, Minor, and Patch values. Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/Unity.SaveData.PS5.Initialization.ThreadAffinity.html": {
    "href": "api/Unity.SaveData.PS5.Initialization.ThreadAffinity.html",
    "title": "Enum ThreadAffinity | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum ThreadAffinity Set the affinity mask to enable NpToolkit to run on multiple cores. Important - Core0 and Core1 and not provided, as these are the main Update and Gfx cores and should not be used. Namespace : Unity.SaveData.PS5.Initialization Assembly : solution.dll Syntax [Flags] public enum ThreadAffinity Fields Name Description Core2 Allow native NpToolkit plug-in to run on Core 2 Core3 Allow native NpToolkit plug-in to run on Core 3 Core4 Allow native NpToolkit plug-in to run on Core 4 Core5 Allow native NpToolkit plug-in to run on Core 5 AllCores Allow native NpToolkit plug-in to run on Core 2,3,4, and 5"
  },
  "api/Unity.SaveData.PS5.Main.EventHandler.html": {
    "href": "api/Unity.SaveData.PS5.Main.EventHandler.html",
    "title": "Delegate Main.EventHandler | Save Data PS5 | 0.0.16-preview",
    "keywords": "Delegate Main.EventHandler Delegate event handler that defines the callback event. Namespace : Unity.SaveData.PS5 Assembly : solution.dll Syntax public delegate void EventHandler(SaveDataCallbackEvent npEvent); Parameters Type Name Description SaveDataCallbackEvent npEvent"
  },
  "api/Unity.SaveData.PS5.Main.html": {
    "href": "api/Unity.SaveData.PS5.Main.html",
    "title": "Class Main | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Main Main entry point to the SaveData plug-in and initialization. Inheritance Object Main Namespace : Unity.SaveData.PS5 Assembly : solution.dll Syntax public class Main Methods AbortRequest(Int32) Abort a pending request. A pending request at the top of the queue might not abort because request processing might have already started. Declaration public static bool AbortRequest(int requestId) Parameters Type Name Description Int32 requestId The request to abort. Returns Type Description Boolean Returns true is the request is in the pending list, false otherwise. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the SaveData plug-in. GetPendingRequests() Get the pending async requests list. This takes a copy of the list so it is safe to enumerate the list. Declaration public static List<PendingRequest> GetPendingRequests() Returns Type Description List < PendingRequest > A list of pending async requests. Initialize(InitSettings) Initializes the SaveData system. Declaration public static InitResult Initialize(InitSettings initSettings) Parameters Type Name Description InitSettings initSettings Initialization paramaters. Returns Type Description InitResult Initialization result. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the SaveData plug-in. Terminate() Terminates the SaveData system. Declaration public static void Terminate() Events OnAsyncEvent Event called when an async request has been completed or a notification. Declaration public static event Main.EventHandler OnAsyncEvent Event Type Type Description Main.EventHandler"
  },
  "api/Unity.SaveData.PS5.Mount.html": {
    "href": "api/Unity.SaveData.PS5.Mount.html",
    "title": "Namespace Unity.SaveData.PS5.Mount | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Mount Classes Mounting Mount save data directory. Mounting.GetMountInfoRequest Gets mount information. Mounting.GetMountParamsRequest Mounting.LoadIconRequest Load an icon from a mount point. Mounting.LoadIconResponse Response class that contains the save data mount point icon. Mounting.MountInfoResponse Response class that contains size info for a mountpoint. Mounting.MountParamsResponse Response class that contains the parameters of the mount point. Mounting.MountPoint Details for a mounted save data folder. Mounting.MountPS4Request Request parameters to mount a PS4 save data folder. Mounting.MountRequest Request parameters to mount a save data folder. Mounting.MountResponse Response class that contains the mount result. Mounting.SaveIconRequest Request class to save icon to a mount point. Mounting.SetMountParamsRequest Sets parameters for a mount point name. Mounting.UnmountRequest Unmounts a save data mount point. Structs Mounting.MountPointName Save data mount point name. Enums Mounting.MountModeFlags Mount mode"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.GetMountInfoRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.GetMountInfoRequest.html",
    "title": "Class Mounting.GetMountInfoRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.GetMountInfoRequest Gets mount information. Inheritance Object RequestBase Mounting.GetMountInfoRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class GetMountInfoRequest : RequestBase Constructors GetMountInfoRequest() Initializes a new instance of the Mounting.GetMountInfoRequest class. Declaration public GetMountInfoRequest() Properties MountPointName Mount point name to retieve the info. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.GetMountParamsRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.GetMountParamsRequest.html",
    "title": "Class Mounting.GetMountParamsRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.GetMountParamsRequest Inheritance Object RequestBase Mounting.GetMountParamsRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class GetMountParamsRequest : RequestBase Constructors GetMountParamsRequest() Initializes a new instance of the Mounting.GetMountParamsRequest class. Declaration public GetMountParamsRequest() Properties MountPointName Moint point name to retrieve the parameters. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.html",
    "title": "Class Mounting | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting Mount save data directory. Inheritance Object Mounting Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class Mounting Properties ActiveMountPoints Returns a list of active mount points. This takes a snapshot copy of the current list, so you can safely iterate the list. Declaration public static List<Mounting.MountPoint> ActiveMountPoints { get; } Property Value Type Description List < Mounting.MountPoint > Methods GetMountInfo(Mounting.GetMountInfoRequest, Mounting.MountInfoResponse) Retrieves size information for a save data folder. For more information, see Sony's documentation on sceSaveDataGetMountInfo for the PS5. Declaration public static int GetMountInfo(Mounting.GetMountInfoRequest request, Mounting.MountInfoResponse response) Parameters Type Name Description Mounting.GetMountInfoRequest request The save data mount point. Mounting.MountInfoResponse response The size info for the mount point. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. GetMountParams(Mounting.GetMountParamsRequest, Mounting.MountParamsResponse) Gets the parameters of a save data mount point. For more information, see Sony's documentation on sceSaveDataGetParam for the PS5. Declaration public static int GetMountParams(Mounting.GetMountParamsRequest request, Mounting.MountParamsResponse response) Parameters Type Name Description Mounting.GetMountParamsRequest request The save data mount. Mounting.MountParamsResponse response The parameters of the save data mount point. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. LoadIcon(Mounting.LoadIconRequest, Mounting.LoadIconResponse) Loads a savedata icon. For more information, see Sony's documentation on sceSaveDataLoadIcon for the PS5. Declaration public static int LoadIcon(Mounting.LoadIconRequest request, Mounting.LoadIconResponse response) Parameters Type Name Description Mounting.LoadIconRequest request The save data mount settings. Mounting.LoadIconResponse response The response contains the PNG image data. Returns Type Description Int32 If the operation is asynchronous, the function provides the request Id. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. Mount(Mounting.MountRequest, Mounting.MountResponse) Mounts a save data folder. See Sony's documentation on sceSaveDataMount2 for the PS5 for more information. Declaration public static int Mount(Mounting.MountRequest request, Mounting.MountResponse response) Parameters Type Name Description Mounting.MountRequest request The save data mount settings. Mounting.MountResponse response The results of the mount operation. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. MountPS4(Mounting.MountPS4Request, Mounting.MountResponse) Mounts a PS4 save data folder. See Sony's documentation on sceSaveDataTransferringMountPs4 for the PS5 for more information. Declaration public static int MountPS4(Mounting.MountPS4Request request, Mounting.MountResponse response) Parameters Type Name Description Mounting.MountPS4Request request The save data mount settings. Mounting.MountResponse response The results of the mount operation. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. SaveIcon(Mounting.SaveIconRequest, EmptyResponse) Saves an icon to the save data mount point. For more information, see Sony's documentation on sceSaveDataSaveIcon for the PS5. Declaration public static int SaveIcon(Mounting.SaveIconRequest request, EmptyResponse response) Parameters Type Name Description Mounting.SaveIconRequest request The save data mount settings. EmptyResponse response This response contains a return code and doesn't contain actual data. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. SetMountParams(Mounting.SetMountParamsRequest, EmptyResponse) Sets the mountpoint parameters. For more information, see Sony's documentation on sceSaveDataSetParam for the PS5. Declaration public static int SetMountParams(Mounting.SetMountParamsRequest request, EmptyResponse response) Parameters Type Name Description Mounting.SetMountParamsRequest request The save data mount. EmptyResponse response This response contains a return code and doesn't contain actual data. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in. Unmount(Mounting.UnmountRequest, EmptyResponse) Unmounts a save data directory. See Sony's documentation on sceSaveDataUmount for the PS5 for more information. Declaration public static int Unmount(Mounting.UnmountRequest request, EmptyResponse response) Parameters Type Name Description Mounting.UnmountRequest request The save data mount point to unmount. EmptyResponse response This response contains a return code and doesn't contain actual data. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in."
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.LoadIconRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.LoadIconRequest.html",
    "title": "Class Mounting.LoadIconRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.LoadIconRequest Load an icon from a mount point. Inheritance Object RequestBase Mounting.LoadIconRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class LoadIconRequest : RequestBase Constructors LoadIconRequest() Initializes a new instance of the Mounting.LoadIconRequest class. Declaration public LoadIconRequest() Properties MountPointName The mount point name to load the icon. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.LoadIconResponse.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.LoadIconResponse.html",
    "title": "Class Mounting.LoadIconResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.LoadIconResponse Response class that contains the save data mount point icon. Inheritance Object ResponseBase Mounting.LoadIconResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class LoadIconResponse : ResponseBase Constructors LoadIconResponse() Initializes a new instance of the Mounting.LoadIconResponse class. Declaration public LoadIconResponse() Properties Icon The save data icon retrieved, if there is one. This will be null if no icon is available. Declaration public Icon Icon { get; } Property Value Type Description Icon"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountInfoResponse.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountInfoResponse.html",
    "title": "Class Mounting.MountInfoResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.MountInfoResponse Response class that contains size info for a mountpoint. Inheritance Object ResponseBase Mounting.MountInfoResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class MountInfoResponse : ResponseBase Constructors MountInfoResponse() Initializes a new instance of the Mounting.MountInfoResponse class. Declaration public MountInfoResponse() Properties Info The size info. Declaration public SaveDataInfo Info { get; } Property Value Type Description SaveDataInfo"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountModeFlags.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountModeFlags.html",
    "title": "Enum Mounting.MountModeFlags | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Mounting.MountModeFlags Mount mode Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax [Flags] public enum MountModeFlags : uint Fields Name Description Invalid Non-valid. It should never be used. ReadOnly Read-only. See SCE_SAVE_DATA_MOUNT_MODE_RDONLY. ReadWrite Read/write. See SCE_SAVE_DATA_MOUNT_MODE_RDWR. Create Create new (error if save data folder already exists). See SCE_SAVE_DATA_MOUNT_MODE_CREATE. DestructOff Destruct off (not recommended). See SCE_SAVE_DATA_MOUNT_MODE_DESTRUCT_OFF. CopyIcon Copy save_data.png in package as icon when creating a new save data. See SCE_SAVE_DATA_MOUNT_MODE_COPY_ICON. Create2 Create new (mount save data folder if it already exists). See SCE_SAVE_DATA_MOUNT_MODE_CREATE2."
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountParamsResponse.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountParamsResponse.html",
    "title": "Class Mounting.MountParamsResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.MountParamsResponse Response class that contains the parameters of the mount point. Inheritance Object ResponseBase Mounting.MountParamsResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class MountParamsResponse : ResponseBase Constructors MountParamsResponse() Initializes a new instance of the Mounting.MountParamsResponse class. Declaration public MountParamsResponse() Properties Params The mount point parameters. Declaration public SaveDataParams Params { get; } Property Value Type Description SaveDataParams"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountPoint.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountPoint.html",
    "title": "Class Mounting.MountPoint | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.MountPoint Details for a mounted save data folder. Inheritance Object Mounting.MountPoint Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class MountPoint Properties DirName Declaration public DirName DirName { get; } Property Value Type Description DirName IsMounted Flag to indicate if the mount point is still mounted. Will be set to false when an unmount request is pending in the request queue. Don't use any mount points that are going to be unmounted on the background thread. Declaration public bool IsMounted { get; } Property Value Type Description Boolean MountMode Flags used to mount the save data folder. Declaration public Mounting.MountModeFlags MountMode { get; } Property Value Type Description Mounting.MountModeFlags OpenTime The time the save data folder was mounted Declaration public DateTime OpenTime { get; } Property Value Type Description DateTime PathName The pathname for the mounted save data. This is a character string called \"/savedata0\", \"/savedata1\", […] or \"/savedata15\". This is the root path name when doing file operations. Declaration public Mounting.MountPointName PathName { get; } Property Value Type Description Mounting.MountPointName TimeMountedEstimate The estimated time the save data folder has been mounted for. See TRC R4098 for details on how long a Read/Write save data folder can remain mounted. Only use this as a guide. Declaration public double TimeMountedEstimate { get; } Property Value Type Description Double UserId Gets the ID of the user who opened the mount point. Declaration public int UserId { get; } Property Value Type Description Int32 Methods ToString() Mount point name. Declaration public override string ToString() Returns Type Description String Mount point name. Overrides Object.ToString()"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountPointName.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountPointName.html",
    "title": "Struct Mounting.MountPointName | Save Data PS5 | 0.0.16-preview",
    "keywords": "Struct Mounting.MountPointName Save data mount point name. Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public struct MountPointName Remarks The save data mount point name is a character string called \"/savedata0\", \"/savedata1\", […] or \"/savedata15\". Fields MOUNT_POINT_DATA_MAXSIZE Maximum size of mount point name. Declaration public const int MOUNT_POINT_DATA_MAXSIZE = 15 Field Value Type Description Int32 Properties Data Mount point name. Declaration public readonly string Data { get; } Property Value Type Description String Methods ToString() The mount point name string. Declaration public override string ToString() Returns Type Description String The mount point name Overrides ValueType.ToString()"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountPS4Request.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountPS4Request.html",
    "title": "Class Mounting.MountPS4Request | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.MountPS4Request Request parameters to mount a PS4 save data folder. Inheritance Object RequestBase Mounting.MountPS4Request Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class MountPS4Request : RequestBase Constructors MountPS4Request() Initializes a new instance of the Mounting.MountRequest class. Declaration public MountPS4Request() Properties DirName Name of the folder to mount. Declaration public DirName DirName { get; set; } Property Value Type Description DirName Fingerprint Fingerprint of savedata to mount. Declaration public Fingerprint Fingerprint { get; set; } Property Value Type Description Fingerprint TitleId TitleId to mount. Declaration public TitleId TitleId { get; set; } Property Value Type Description TitleId"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountRequest.html",
    "title": "Class Mounting.MountRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.MountRequest Request parameters to mount a save data folder. Inheritance Object RequestBase Mounting.MountRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class MountRequest : RequestBase Constructors MountRequest() Initializes a new instance of the Mounting.MountRequest class. Declaration public MountRequest() Fields BLOCK_SIZE Number of bytes in a single block. Declaration public const int BLOCK_SIZE = 65536 Field Value Type Description Int32 BLOCKS_MAX The maximum reserved size of a save data folder. Declaration public const int BLOCKS_MAX = 16384 Field Value Type Description Int32 BLOCKS_MIN The minimum reserved size of a save data folder. Declaration public const int BLOCKS_MIN = 48 Field Value Type Description Int32 SYSTEM_BLOCKS_EQUAL_TO_BLOCKS Valud for system blocks to create a save data that supported the rollback feature. Declaration public const ulong SYSTEM_BLOCKS_EQUAL_TO_BLOCKS = 18446744073709551615UL Field Value Type Description UInt64 Properties Blocks Maximum number of save data blocks during new creation (number of blocks, 96 to 32768). Declaration public ulong Blocks { get; set; } Property Value Type Description UInt64 DirName Name of the folder to mount. Declaration public DirName DirName { get; set; } Property Value Type Description DirName MountMode Mount mode. Declaration public Mounting.MountModeFlags MountMode { get; set; } Property Value Type Description Mounting.MountModeFlags SystemBlocks Number of blocks for save data system area. Declaration public ulong SystemBlocks { get; set; } Property Value Type Description UInt64"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.MountResponse.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.MountResponse.html",
    "title": "Class Mounting.MountResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.MountResponse Response class that contains the mount result. Inheritance Object ResponseBase Mounting.MountResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class MountResponse : ResponseBase Constructors MountResponse() Initializes a new instance of the Mounting.MountResponse class. Declaration public MountResponse() Properties MountPoint The mount point name. Declaration public Mounting.MountPoint MountPoint { get; } Property Value Type Description Mounting.MountPoint RequiredBlocks Number of free file system blocks required for mounting. Declaration public ulong RequiredBlocks { get; } Property Value Type Description UInt64 WasCreated True if the save data folder was created as part of the mount operation, false if the folder already existed before the operation. Declaration public bool WasCreated { get; } Property Value Type Description Boolean"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.SaveIconRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.SaveIconRequest.html",
    "title": "Class Mounting.SaveIconRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.SaveIconRequest Request class to save icon to a mount point. Inheritance Object RequestBase Mounting.SaveIconRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class SaveIconRequest : RequestBase Constructors SaveIconRequest() Initializes a new instance of the Mounting.SaveIconRequest class. Declaration public SaveIconRequest() Fields DATA_ICON_HEIGHT_FULL The required height of the full icon. Declaration public const int DATA_ICON_HEIGHT_FULL = 436 Field Value Type Description Int32 DATA_ICON_HEIGHT_SMALL The required height of the icon. Declaration public const int DATA_ICON_HEIGHT_SMALL = 388 Field Value Type Description Int32 DATA_ICON_WIDTH_FULL The required width of the full icon. Declaration public const int DATA_ICON_WIDTH_FULL = 776 Field Value Type Description Int32 DATA_ICON_WIDTH_SMALL The required width of the small icon. Declaration public const int DATA_ICON_WIDTH_SMALL = 688 Field Value Type Description Int32 FILEPATH_LENGTH The maximum length of the pathname to an icon file Declaration public const int FILEPATH_LENGTH = 127 Field Value Type Description Int32 ICON_FILE_MAXSIZE The maximum number of bytes in the icon PNG file. Declaration public const int ICON_FILE_MAXSIZE = 1353344 Field Value Type Description Int32 Properties IconPath Path to a PNG file. Declaration public string IconPath { get; set; } Property Value Type Description String MountPointName Mount name to save the icon. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName RawPNG An array of bytes containing the PNG data. Declaration public byte[] RawPNG { get; set; } Property Value Type Description Byte []"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.SetMountParamsRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.SetMountParamsRequest.html",
    "title": "Class Mounting.SetMountParamsRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.SetMountParamsRequest Sets parameters for a mount point name. Inheritance Object RequestBase Mounting.SetMountParamsRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class SetMountParamsRequest : RequestBase Constructors SetMountParamsRequest() Initializes a new instance of the Mounting.SetMountParamsRequest class. Declaration public SetMountParamsRequest() Properties MountPointName Mount point name to set the parameters. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName Params Parameters to set. Declaration public SaveDataParams Params { get; set; } Property Value Type Description SaveDataParams"
  },
  "api/Unity.SaveData.PS5.Mount.Mounting.UnmountRequest.html": {
    "href": "api/Unity.SaveData.PS5.Mount.Mounting.UnmountRequest.html",
    "title": "Class Mounting.UnmountRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Mounting.UnmountRequest Unmounts a save data mount point. Inheritance Object RequestBase Mounting.UnmountRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Mount Assembly : solution.dll Syntax public class UnmountRequest : RequestBase Constructors UnmountRequest() Initializes a new instance of the Mounting.UnmountRequest class. Declaration public UnmountRequest() Properties MountPointName Name of mount point to unmount. Declaration public Mounting.MountPointName MountPointName { get; set; } Property Value Type Description Mounting.MountPointName"
  },
  "api/Unity.SaveData.PS5.Search.html": {
    "href": "api/Unity.SaveData.PS5.Search.html",
    "title": "Namespace Unity.SaveData.PS5.Search | Save Data PS5 | 0.0.16-preview",
    "keywords": "Namespace Unity.SaveData.PS5.Search Classes Searching Save data search methods. Searching.DirNameSearchRequest Request paramters for searching existing save data folders. Searching.DirNameSearchResponse Response class that contains a list of found save data directory names. Searching.SearchSaveDataItem Search folder name details. Enums Searching.SearchSortKey Sort key. This contains various criteria to sort save data search results. Searching.SearchSortOrder Sort order for save data search results."
  },
  "api/Unity.SaveData.PS5.Search.Searching.DirNameSearchRequest.html": {
    "href": "api/Unity.SaveData.PS5.Search.Searching.DirNameSearchRequest.html",
    "title": "Class Searching.DirNameSearchRequest | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Searching.DirNameSearchRequest Request paramters for searching existing save data folders. Inheritance Object RequestBase Searching.DirNameSearchRequest Inherited Members RequestBase.FunctionType RequestBase.UserId RequestBase.Async RequestBase.Locked RequestBase.IgnoreCallback Namespace : Unity.SaveData.PS5.Search Assembly : solution.dll Syntax public class DirNameSearchRequest : RequestBase Constructors DirNameSearchRequest() Initializes a new instance of the Searching.DirNameSearchRequest class. Declaration public DirNameSearchRequest() Fields DIR_NAME_MAXSIZE Maximum number of folder names to return. Declaration public const int DIR_NAME_MAXSIZE = 1024 Field Value Type Description Int32 Properties DirName Filter for folder names. This is empty by default so that all folder names are included in the search. Declaration public DirName DirName { get; set; } Property Value Type Description DirName IncludeBlockInfo Include block size info in returned results. Declaration public bool IncludeBlockInfo { get; set; } Property Value Type Description Boolean IncludeParams Include parameters in returned results. Declaration public bool IncludeParams { get; set; } Property Value Type Description Boolean Key Search key to use. Defaults to DirName . Declaration public Searching.SearchSortKey Key { get; set; } Property Value Type Description Searching.SearchSortKey MaxDirNameCount Maximum number of folder names to return. Declaration public uint MaxDirNameCount { get; set; } Property Value Type Description UInt32 Order Sort order. Defaults to Ascending . Declaration public Searching.SearchSortOrder Order { get; set; } Property Value Type Description Searching.SearchSortOrder SearchPS4 Search for PS4 titles only. Declaration public bool SearchPS4 { get; set; } Property Value Type Description Boolean TitleId TitleId to search for. This is empty by default so that all title ids are included in the search. Declaration public TitleId TitleId { get; set; } Property Value Type Description TitleId"
  },
  "api/Unity.SaveData.PS5.Search.Searching.DirNameSearchResponse.html": {
    "href": "api/Unity.SaveData.PS5.Search.Searching.DirNameSearchResponse.html",
    "title": "Class Searching.DirNameSearchResponse | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Searching.DirNameSearchResponse Response class that contains a list of found save data directory names. Inheritance Object ResponseBase Searching.DirNameSearchResponse Inherited Members ResponseBase.ReturnCodeValue ResponseBase.ReturnCode ResponseBase.Exception ResponseBase.Locked ResponseBase.IsErrorCode ResponseBase.ConvertReturnCodeToString(FunctionTypes) Namespace : Unity.SaveData.PS5.Search Assembly : solution.dll Syntax public class DirNameSearchResponse : ResponseBase Constructors DirNameSearchResponse() Initializes a new instance of the Searching.DirNameSearchResponse class. Declaration public DirNameSearchResponse() Properties HasInfo True if folder block size is included in search results, false otherwise. Declaration public bool HasInfo { get; } Property Value Type Description Boolean HasParams True if folder parameters are included in search results, false otherwise. Declaration public bool HasParams { get; } Property Value Type Description Boolean SaveDataItems Names of the flders found in a search. Declaration public Searching.SearchSaveDataItem[] SaveDataItems { get; } Property Value Type Description Searching.SearchSaveDataItem []"
  },
  "api/Unity.SaveData.PS5.Search.Searching.html": {
    "href": "api/Unity.SaveData.PS5.Search.Searching.html",
    "title": "Class Searching | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Searching Save data search methods. Inheritance Object Searching Namespace : Unity.SaveData.PS5.Search Assembly : solution.dll Syntax public class Searching Methods DirNameSearch(Searching.DirNameSearchRequest, Searching.DirNameSearchResponse) Searches for save data folders for a specified user ID. For more information, see Sony's documentation on sceSaveDataDirNameSearch for the PS5. Declaration public static int DirNameSearch(Searching.DirNameSearchRequest request, Searching.DirNameSearchResponse response) Parameters Type Name Description Searching.DirNameSearchRequest request Search parameters to use. Searching.DirNameSearchResponse response Search results. Returns Type Description Int32 If the operation is asynchronous, the method provides the request ID. Exceptions Type Condition SaveDataException Will throw an exception either when the request data is invalid, or an internal error has occured inside the plug-in."
  },
  "api/Unity.SaveData.PS5.Search.Searching.SearchSaveDataItem.html": {
    "href": "api/Unity.SaveData.PS5.Search.Searching.SearchSaveDataItem.html",
    "title": "Class Searching.SearchSaveDataItem | Save Data PS5 | 0.0.16-preview",
    "keywords": "Class Searching.SearchSaveDataItem Search folder name details. Inheritance Object Searching.SearchSaveDataItem Namespace : Unity.SaveData.PS5.Search Assembly : solution.dll Syntax public class SearchSaveDataItem Properties DirName Save data folder name. Declaration public DirName DirName { get; } Property Value Type Description DirName Info Save data folder size info. Declaration public SaveDataInfo Info { get; } Property Value Type Description SaveDataInfo Params Save data folder parameters. Declaration public SaveDataParams Params { get; } Property Value Type Description SaveDataParams"
  },
  "api/Unity.SaveData.PS5.Search.Searching.SearchSortKey.html": {
    "href": "api/Unity.SaveData.PS5.Search.Searching.SearchSortKey.html",
    "title": "Enum Searching.SearchSortKey | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Searching.SearchSortKey Sort key. This contains various criteria to sort save data search results. Namespace : Unity.SaveData.PS5.Search Assembly : solution.dll Syntax public enum SearchSortKey : uint Fields Name Description DirName Directory name. See SCE_SAVE_DATA_SORT_KEY_DIRNAME UserParam User parameter. See SCE_SAVE_DATA_SORT_KEY_USER_PARAM Blocks Number of blocks. See SCE_SAVE_DATA_SORT_KEY_BLOCKS Time Date and time of last update. See SCE_SAVE_DATA_SORT_KEY_MTIME FreeBlocks Number of free blocks. See SCE_SAVE_DATA_SORT_KEY_FREE_BLOCKS"
  },
  "api/Unity.SaveData.PS5.Search.Searching.SearchSortOrder.html": {
    "href": "api/Unity.SaveData.PS5.Search.Searching.SearchSortOrder.html",
    "title": "Enum Searching.SearchSortOrder | Save Data PS5 | 0.0.16-preview",
    "keywords": "Enum Searching.SearchSortOrder Sort order for save data search results. Namespace : Unity.SaveData.PS5.Search Assembly : solution.dll Syntax public enum SearchSortOrder : uint Fields Name Description Ascending Ascending order. See SCE_SAVE_DATA_SORT_ORDER_ASCENT Descending Descending order. See SCE_SAVE_DATA_SORT_ORDER_DESCENT"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Save Data PS5 | 0.0.16-preview",
    "keywords": "Changelog All notable changes to the package will be documented in this file. The format is based on Keep a Changelog and this project adheres to Semantic Versioning . Due to package verification, the latest version below is the unpublished version and the date is meaningless. however, it has to be formatted properly to pass verification tests. [0.0.16-preview] - 2023-04-06 Added Added support for SDK 7.0 [0.0.15-preview] - 2022-08-10 Fixed Added support for SDK 6.00 [0.0.14-preview] - 2022-08-10 Fixed Changed MountRequest() constructor so it can now be called from a C# thread other than just the Unity main thread. [0.0.13-preview] - 2022-05-23 Changed Included offline HTML documentation in the HTMLDocs~ folder. Documentation can now be viewed without needing to run a local webserver. [0.0.12-preview] - 2022-04-25 Added Added support for SDK 5.0. Exposed MountRequest.SystemBlocks to enable support for new rollback feature (enabled by default) [0.0.11-preview] - 2021-11-23 Changed Added support for SDK 4.0 [0.0.10-preview] - 2021-05-25 Changed Added support to read PS4 save games on PS5 (SDK 3.0 only) [0.0.9-preview] - 2021-02-17 Changed Updated the sample ExampleWriteFilesRequest and ExampleReadFilesRequest to demonstrate more efficient C# methods to write save files on PS5. [0.0.8-preview] - 2021-01-08 Added New package documentation and HTML pages updated Changed Fixed spelling of Unity.SaveData.PS5.Initalization. Changed to Unity.SaveData.PS5.Initialization. Updated MountRequest.BLOCK_SIZE, MountRequest.BLOCKS_MIN and MountRequest.BLOCKS_MAX to new PS5 SDK values Fixed Error checks are performed when setting SaveDataParams properties Title, SubTitle and Detail. The byte length of the string is checked and an exception thrown if it exceeds the maximum supported length. [0.0.7-preview] - 2020-11-10 Added Added additional support for SDK 2.0 on PS5 Moved existing .prx files to plugin folders 1_00 Added new .prx files to plugin folders 2_00 [0.0.6-preview] - 2020-09-17 Changed Added AllowNewItemTest callback to StartSaveDialogProcess. Use this to decide if the save dialog should display a save new item button. [0.0.5-preview] - 2020-09-14 Changed Rebuilt SaveData.prx using SDK 1.000.050 [0.0.4-preview] - 2020-03-05 Changed Updated to use SDK 0.95 Changed namespace to match package name Unity.SaveData.PS5 Split system into additional namespaces to group functionality and produce better documentation Fixed issue in native code with sceSaveDataMount3 using SCE_SAVE_DATA_MOUNT_MODE_RDWR as usage has changed in 0.95. No change to the C# API was required. Added Added HTML documentation to HTML~ directory in package root. [0.0.3-preview] - 2020-02-17 Added HTML offline documentation. HTML docs are located in the /HTMLDocs~ directory. [0.0.2-preview] - 2020-02-17 Added Test sample now added to package. Installed from Package Manager Window [0.0.1-preview] - 2020-01-10 Fixed Initial Version Changed Initial Version Added Initial Version"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home Page. | Save Data PS5 | 0.0.16-preview",
    "keywords": "Home Page. This is the home page for this package."
  },
  "license/index.html": {
    "href": "license/index.html",
    "title": "| Save Data PS5 | 0.0.16-preview",
    "keywords": "window.location.replace('LICENSE.html')"
  },
  "license/LICENSE.html": {
    "href": "license/LICENSE.html",
    "title": "| Save Data PS5 | 0.0.16-preview",
    "keywords": "Save Data PS5 copyright © 2021 Unity Technologies ApS Licensed under the Unity Companion License for Unity-dependent projects--see Unity Companion License . Unless expressly provided otherwise, the Software under this license is made available strictly on an “AS IS” BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions."
  },
  "manual/CreateSequence.html": {
    "href": "manual/CreateSequence.html",
    "title": "Creating a save data file | Save Data PS5 | 0.0.16-preview",
    "keywords": "Creating a save data file The steps on this page show how to: create a save data file read and write files The steps provide a high-level overview of the required sequence of requests. Some of the API detail has been omitted for clarity. Overview This page demonstrates how to: Mount the save data in read/write mode Write the parameters of the save data Write a save data icon Write the save data files into the save data Unmount the save data Mount the save data in read/write mode Mounting.MountRequest request = new Mounting.MountRequest(); DirName dirName = new DirName(); dirName.Data = \"MySaveDataName\"; // Unique name for the save data, not visible by the player request.UserId = userId; request.DirName = dirName; request.MountMode = Mounting.MountModeFlags.Create2 | Mounting.MountModeFlags.ReadWrite; request.Blocks = maximumBlockSizeForTitle; // Set the maximum number of blocks a save data will require // Response object containing the mount point once the save data has been created. Mounting.MountResponse response = new Mounting.MountResponse(); int requestId = Mounting.Mount(request, response); This code example asynchronously creates a save data file and then opens it for read and write access. If the save data already exists, the code opens the existing data for read and write accesss. The MountResponse object returns the MountPoint which is used in subsequent operations on the mounted save data. Write the parameters of the save data The code example below shows how to write displayable info to the save data. Mounting.SetMountParamsRequest request = new Mounting.SetMountParamsRequest(); request.UserId = userId; request.MountPointName = mp.PathName; SaveDataParams sdParams = new SaveDataParams(); // Set displayable parameters for the save data. sdParams.Title = \"My Save Data\"; sdParams.SubTitle = \"My Save Data Subtitle\"; sdParams.Detail = \"This is the long description of the save data.\"; request.Params = sdParams; // This request doesn't have any response data, but the callback will still happen to indicate the request has completed. EmptyResponse response = new EmptyResponse(); int requestId = Mounting.SetMountParams(request, response); Write a save data icon The code example below shows how to set the icon to use for the save data. Mounting.SaveIconRequest request = new Mounting.SaveIconRequest(); request.UserId = userId; request.MountPointName = mp.PathName; // Pathname to a save icon. This also supports writing an icon // using a PNG from memory. request.IconPath = \"/app0/Media/StreamingAssets/SaveIcon.png\"; EmptyResponse response = new EmptyResponse(); int requestId = Mounting.SaveIcon(request, response); Write the save data files into the save data The system provides an asynchronous method to read, write, and enumerate files stored inside a save data. Your title can provide custom request types that can read and write files using the systems request thread. // The custom class provided by your title to write save data public class ExampleWriteFilesRequest : FileOps.FileOperationRequest { public string TextData { get; set; } public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response) { ExampleWriteFilesResponse fileResponse = response as ExampleWriteFilesResponse; string outpath = mp.PathName.Data + \"/MySaveFile.txt\"; File.WriteAllText(outpath, TextData); // Read the info about the file just written and set this on the custom response object. FileInfo info = new FileInfo(outpath); fileResponse.lastWriteTime = info.LastWriteTime; fileResponse.totalFileSizeWritten = info.Length; } } // The custom class containing any response data the title might want to retrieve from the operation public class ExampleWriteFilesResponse : FileOps.FileOperationResponse { public DateTime lastWriteTime; public long totalFileSizeWritten; } DoFileOperations is called when the request is processed on the systems background thread. You can use any standard .NET File operation, including create directories. For example, to enumerate all the files inside the save data, you can use the .NET Directory.GetFiles method. When performing file operations, the MountPoint is used as the first part of the path name. To call the ExampleWriteFilesRequest request: ExampleWriteFilesRequest request = new ExampleWriteFilesRequest(); request.UserId = userId; request.MountPointName = mp.PathName; request.TextData = \"Custom data to write\"; ExampleWriteFilesResponse response = new ExampleWriteFilesResponse(); int requestId = FileOps.CustomFileOp(request, response); Unmount the save data After the save data has been written, it must be unmounted. There are limits on the number of mount points that can be in use at any one time, and also how long a save data can remain mounted while in write mode. For more information on these limits, please refer to the Sony documentation. Mounting.UnmountRequest request = new Mounting.UnmountRequest(); request.UserId = userId; request.MountPointName = mp.PathName; EmptyResponse response = new EmptyResponse(); int requestId = Mounting.Unmount(request, response);"
  },
  "manual/DialogSequence.html": {
    "href": "manual/DialogSequence.html",
    "title": "Using system dialogs | Save Data PS5 | 0.0.16-preview",
    "keywords": "Using system dialogs The steps on this page show how to use the save dialog state machine. This package provides a state machine as an example of a save, load or delete sequence. Not all titles need to do this sequence. Your title might need to provide its own state machine for saving data. The examples below must run inside a MonoBehaviour which contains the call to StartCoroutine . Overview This page demonstrates how to: Set up the save data parameters Create the custom file operations Start the save dialog process Save process dialog The code example below shows how to start the save dialog coroutine using SaveDataDialogProcess.StartSaveDialogProcess . It also uses a custom file operations class to write the data. See Creating a save data for an example of how to use the ExampleWriteFilesRequest class. // Set the user id for the saves int userId = userId; // Create the new item for the saves dialog list Dialogs.NewItem newItem = null; string title = \"New save data title\"; newItem = new Dialogs.NewItem(); newItem.Title = title; // The directory name for a new save data DirName newDirName = new DirName(); newDirName.Data = \"NewSaveData\"; // Maximum size of the new save data UInt64 newSaveDataBlocks = myMaximumBlockSize; // Parameters to use for the save data SaveDataParams saveDataParams = new SaveDataParams(); saveDataParams.Title = title; saveDataParams.SubTitle = \"Subtitle for save data\"; saveDataParams.Detail = \"Details for save data\"; // Actual custom file operation to perform on the save data, once it is mounted. ExampleWriteFilesRequest fileRequest = new ExampleWriteFilesRequest(); fileRequest.TextData = \"Custom data to write\"; ExampleWriteFilesResponse fileResponse = new ExampleWriteFilesResponse(); // A callback allowing the caller to specify whether the dialog should allow a new save data or that the user must overwrite an existing one. If the callback is null, the dialog will always allow a new save data item SaveDataDialogProcess.AllowNewItemTest allowNewItemCB = AllowNewItemCB; // Start the Unity coroutine that will run the SaveDataDialogProcess state machine. StartCoroutine(SaveDataDialogProcess.StartSaveDialogProcess(userId, newItem, newDirName, newSaveDataBlocks, saveDataParams, fileRequest, fileResponse, backup, allowNewItemCB)); Load process dialog Use the SaveDataDialogProcess.StartLoadDialogProcess coroutine to load a save data using the system dialogs. Delete dialog Use the SaveDataDialogProcess.StartDeleteDialogProcess coroutine to load a save data using the system dialogs."
  },
  "manual/ExternalLinks.html": {
    "href": "manual/ExternalLinks.html",
    "title": "Links to Sony documentation | Save Data PS5 | 0.0.16-preview",
    "keywords": "Links to Sony documentation For more information about how to work with save data, see the following documentation on the PlayStation® Developer network: Feature Link Main Page SaveData Library Overview Initialization Initialization/Termination Mounting Mounting/Unmounting Deleting Save Data Deletion Backup Backup Searching Save Data Search Dialogs SaveDataDialog Library Overview"
  },
  "manual/Features.html": {
    "href": "manual/Features.html",
    "title": "C# API features | Save Data PS5 | 0.0.16-preview",
    "keywords": "C# API features This page provides a high level view of the main features provided by the C# API for working with save data. Asynchronous Support The C# API is based on a request and response API; your title creates Request and Response objects, and then you can call the corresponding C# API. The call will be processed on a background thread. When the request has finished, a response callback provides the results so the title can process them. You can use the following APIs: Purpose API class Notes Starting the system Main.Initialize You must initialize the save data system before you can use it. For more information, see the Getting Started page. To learn how to initialize the API, see Initialization . Mounting a save data Mounting The Mounting class provides methods to create and open a save data for read and write access. Deleting a save data Deleting Deletes a user save data Backup Backups You can configure the system to automatically back up a save data after it has been written. |Search| Searching |Use the Search class to enumerate all the save data within the title for a specific user.| |System dialogs| Dialogs |The dialog system provides access to the built-in PS5 system dialogs for saving. This supports multiple types of dialog display as defined in the Dialog Mode . The C# API also provides an example of a Save, Load and Delete dialog state machine. This contains a Unity coroutine which uses the various dialog and other package C# APIs to create a save, load or delete sequence. You can use this as-is, or create your own implementation using this as an example. For more information, see Save Data Dialog Process .| |File operations| FileOps |The FileOps system provides asynchronous callback methods. Your title uses these callbacks to execute title specific read and write file operations. You can use calls to standard C# IO methods such as .NET File and Directory classes. Your save data can contain multiple files of any text or binary file type.|"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Save Data package | Save Data PS5 | 0.0.16-preview",
    "keywords": "Save Data package The Save Data package provides access to the PlayStation 5 save system. The package contains the following: A C# API which provides asynchronous calls to the PS5 save data system, including the PS5 save data system dialogs A native built prx library which provides the native plugin between the C# API and the calls to the PS5 Sony libraries. The C++ source code for this library is also available in the source~ folder. The purpose of this package is to provide access to the Save Data system, which is further documented on Sony's developer website. For more information, see the External links page. This documentation doesn't cover any TRC (Technical Requirements Checklist) that your title must adhere to. Please check the Sony documentation for latest compliance requirements. For an overview of supported features, see documentation on C# API features HTML Documentation for this package is only available locally, in the package folder, due to Sony's NDA requirements for PS5 development. For more information, see Accessing package documentation ."
  },
  "manual/Initialization.html": {
    "href": "manual/Initialization.html",
    "title": "Initializing the API | Save Data PS5 | 0.0.16-preview",
    "keywords": "Initializing the API This page illustrates how to initialize the Save Data system and asynchronous callback. First, you must initialize the system: // Contains the results of initialization including the SDK version of the native plugin. InitResult initResult; try { // Set response callback Main.OnAsyncEvent += Main_OnAsyncEvent; InitSettings settings = new InitSettings(); // Set which core(s) the Save Data thread can execute on settings.Affinity = ThreadAffinity.Core5; // Initialize the system. initResult = Main.Initialize(settings); if (initResult.Initialized == true) { // Initialization succeeded } else { // Initialization failed } } catch (SaveDataException e) { // Exception - See e.ExtendedMessage for more info } Then, define the response callback in the project script code: private void Main_OnAsyncEvent(SaveDataCallbackEvent callbackEvent) { if (callbackEvent.Response != null) { if (callbackEvent.Response.ReturnCodeValue < 0) { // An error has occurred. This is a Sony error code value that you can look up in Sony's developer documentation } if (callbackEvent.Response.Exception != null) { // An exception occurred in the async code. Get the extended error message for more details. if (callbackEvent.Response.Exception is SaveDataException) { string errorMessage = ((SaveDataException)callbackEvent.Response.Exception).ExtendedMessage; // Handle the error } } } } Finally, terminate the system: try { Main.Terminate(); } catch (SaveDataException e) { // Exception - See e.ExtendedMessage for more info }"
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "Installation | Save Data PS5 | 0.0.16-preview",
    "keywords": "Installation To install the com.unity.savedata.ps5 package, follow these steps: Open the Package Manager window (menu: Window > Package Manager ). Click the + button in the top-left corner of the window. Click Add Package from Tarball . In the dialog that displays, select the Save Data package .tgz file and click OK. This installs the package into your Unity project."
  },
  "manual/MakingRequests.html": {
    "href": "manual/MakingRequests.html",
    "title": "Making requests | Save Data PS5 | 0.0.16-preview",
    "keywords": "Making requests After you install the package, you must initialize the system and a response callback needs to be created, as described in the Initialization instructions. Creating requests and handling responses After the system has been initialized, it is ready to receive its first request. All requests can either be asynchronous or block the thread they are called on. The following example shows how to create a searching request. All request types follow a similar pattern. Creating a request Each request method requires two objects: A request object that contains the request settings A response object that contains the results after the request has completed You should put all calls to the request inside a try..catch C# block, because requests can throw exceptions if they use incorrect parameters or options. For brevity, the code example below omits this, but it is recommended to use exception handling. See the Sample script code for a more detailed look at how to handle errors and exceptions. Requests are placed into a queue and processed in the order they are added. // Create the request object Searching.DirNameSearchRequest request = new Searching.DirNameSearchRequest(); // Set the request properties including the local user Id request.UserId = userId; request.Key = Searching.SearchSortKey.Time; request.Order = Searching.SearchSortOrder.Ascending; request.IncludeBlockInfo = false; request.IncludeParams = false; request.MaxDirNameCount = 10; // Create a response object Searching.DirNameSearchResponse response = new Searching.DirNameSearchResponse(); // Call the API int requestId = Searching.DirNameSearch(request, response); The requestId is returned for asynchronous calls. You can use it in Main.AbortRequest to cancel a request in the pending queue. If the request is already being processed, you can't cancel it. Receiving the response After a request has completed, the event callback method receives a SaveDataCallbackEvent that contains the request and response objects, as well the codes for errors that occurred during request handling, if there are any. For an example of the callback, see the Main_OnAsyncEvent method in the Initialization instructions. The following example omits error handling, but this should be done in a full implementation of the callback method. private void Main_OnAsyncEvent(SaveDataCallbackEvent callbackEvent) { switch (callbackEvent.ApiCalled) { case FunctionTypes.DirNameSearch: { Searching.DirNameSearchResponse response = callbackEvent.Response as Searching.DirNameSearchResponse; // Handle response here. In the case of a DirNameSearchResponse, this contains an array of found save data. } break; } } Polling responses Instead of handling a response via the callback, you can poll the response to test if it has completed. This can be useful when doing a Unity coroutine. Response polling is used in the dialog state machine . To stop a request from using the callback, set the IgnoreCallback property to true. For example, a part of a coroutine might look like this: Searching.DirNameSearchRequest request = new Searching.DirNameSearchRequest(); request.UserId = userId; // Stop the request using the callback request.IgnoreCallback = true; Searching.DirNameSearchResponse response = new Searching.DirNameSearchResponse(); // Call the API Searching.DirNameSearch(request, response); while (response.Locked == true) { // Yield the coroutine until the next update yield return null; } // Process the results now the response is no longer locked. Synchronous calls You can make request calls to block the calling thread until complete. These calls block the thread until they reach the top of the pending queue and their execution completes. request.Async = false; Avoid doing this on the main Unity thread because save data operations might take a while to complete."
  },
  "manual/Sample.html": {
    "href": "manual/Sample.html",
    "title": "Save Data Sample | Save Data PS5 | 0.0.16-preview",
    "keywords": "Save Data Sample Installation To install the sample, follow these steps: Create a new Unity project and install the package. For more information, see the Installation page. Install the Save Data Sample from the Package Manager window (menu: Window > Package Manager ). Click the Import into project button next to the sample. Change your build target to PS5. Open the Build Settings window (menu: File > Build Settings ), select the PS5 build target, and click the Switch Platform button. Configure settings for the project from the SCE Publishing Utils menu. The sample adds this menu to Unity's top menu bar. You can configure the following settings: Set Publish Settings for PS5 updates the Publishing Settings section in the Player Settings window. Set Input Manager updates the input system will a gamepad layout compatible with the PS5. Without this the sample, your title can't receive input from multiple player gamepads. Open the SaveSample Unity scene located in Assets/Samples/Save Data PS5/(version)/Save Data Sample/ The (version) number depends on the package version. 6) Add the scene to the Scenes In Build list, as scene 0, and build the project. Sample Title The sample title demonstrates the various features for the Save Data package. You can test each of the features, such as searching, mounting (including creating), and file operations for save data. You can also see how the save, load and delete save data dialog sequence appears. The sample supports multiple users. If multiple gamepads are connected to the PS5, the user IDs display in the top-left of the screen. The active user is based on the last gamepad that received input. This allows the various save data features to be tested with different users as each user has their own set of save data. The project script code for the sample is located in Assets/Samples/Save Data PS5/(version)/Save Data Sample/SonyExamples after you import the sample."
  },
  "manual/TableOfContents.html": {
    "href": "manual/TableOfContents.html",
    "title": "| Save Data PS5 | 0.0.16-preview",
    "keywords": "About the Save Data package Installation HTML documentation C# API features Getting started Save Data Sample Initializing the API Making requests Basic processes Creating a save data file Using system dialogs Links to Sony documentation"
  },
  "manual/ViewHTML.html": {
    "href": "manual/ViewHTML.html",
    "title": "Accessing package documentation | Save Data PS5 | 0.0.16-preview",
    "keywords": "Accessing package documentation Because this package is under NDA, Unity provides the HTML documentation locally, in the HTMLDocs~ folder. You must run a local webserver to view the HTML files correctly. Viewing the documentation in a web browser The following method of running a local webserver requires Python 3 to be installed. Run the following command in a command prompt in the same location as you Unity project folder. python -m http.server You will see output similar to this. Serving HTTP on :: port 8000 (http://[::]:8000/) ... Open a web browser and enter the URL below. Use the port number reported in the output. http://localhost:8000/ This shows a directory listing from the directory where webserver is running. Navigate to the HTLMDocs~ folder in the package to open the HTML documentation for the package."
  }
}